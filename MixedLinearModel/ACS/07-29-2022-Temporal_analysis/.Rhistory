t.value.size.pLRT <- readRDS('t.value.pLRT.value.RDS')
#Adjust the pvalue based on BH method.
pvalue.adjust <- p.adjust(t.value.size.pLRT$pvalue, method = 'BH')
t.value.size.pLRT$pvalue.adjust <- pvalue.adjust
saveRDS(t.value.size.pLRT, 't.value.pLRT.value.RDS')
# Add text to the plot
feature.labs <- rownames(t.value.size.pLRT)
# Add text to the plot
.labs <- rownames(t.value.size.pLRT)
t.value.size.pLRT$feature_class <- rep("FcR", length = nrow(t.value.size.pLRT))
t.value.size.pLRT$feature_class[which(grepl("IgG|IgA|IgM", .labs))] <- "titer"
t.value.size.pLRT$feature_class[which(grepl("RCA|SNA", .labs))] <- "Lectin"
t.value.size.pLRT$feature_class[which(grepl("ADNP|ADCP", .labs))] <- "Function"
t.value.size.pLRT$feature_class <- factor(t.value.size.pLRT$feature_class)
t.value.size.pLRT$Epitope <- rep("PPD", length = nrow(t.value.size.pLRT))
t.value.size.pLRT$Epitope[which(grepl("_ESAT6", .labs))] <- "ESAT6"
t.value.size.pLRT$Epitope[which(grepl("_Hspx", .labs))] <- "Hspx"
t.value.size.pLRT$Epitope[which(grepl("_CFP10", .labs))] <- "CFP10"
t.value.size.pLRT$Epitope[which(grepl("_Ag85", .labs))] <- "Ag85"
t.value.size.pLRT$Epitope[which(grepl("_CMV_pentamer", .labs))] <- "CMV_pentamer"
t.value.size.pLRT$Epitope[which(grepl("_CMV_gB", .labs))] <- "CMV_gB"
t.value.size.pLRT$Epitope[which(grepl("_EBV", .labs))] <- "EBV"
t.value.size.pLRT$Epitope[which(grepl("_Tbad", .labs))] <- "Tbad"
t.value.size.pLRT$Epitope[which(grepl("_LAM", .labs))] <- "LAM"
# Add text to the plot
feature.labs <- rownames(t.value.size.pLRT)
temp.index <- which(pvalue.adjust >= 0.05)
feature.labs[temp.index] <- ""
# effect size between label2 vs 1
ggplot(t.value.size.pLRT, aes(Groupprogressor, -log10(pvalue.adjust))) +
labs(x = 'T value: progressor vs nonprogressor', y = '-log10(BH.adjused.pvalue.LRT)') +
geom_point(aes(color = Epitope),position = position_jitter(width = 0.01, height = 0.01)) +
geom_hline(yintercept=-log10(0.05), linetype="dashed", color = "gray", size=1) +
#geom_vline(xintercept=0.8, linetype="dashed", color = "red", size=1) +
geom_text_repel(aes(label = feature.labs), size = 2) +
#scale_color_manual(values = c("#00AFBB", "#E7B800", "#FC4E07"))
theme_classic()
ggsave(file.path(saved.dic, 'nonprogressor vs progressor Tvalue BH_correction_v4.png'), height = 6, width = 6, dpi = 300)
ggsave(file.path(saved.dic, 'nonprogressor vs progressor Tvalue BH_correction_v4.pdf'), height = 6, width = 6, dpi = 300, useDingbats=FALSE)
# effect size between label2 vs 1
ggplot(t.value.size.pLRT, aes(Groupprogressor, -log10(pvalue.adjust))) +
labs(x = 'T value: nonprogressor vs progressor', y = '-log10(BH.adjused.pvalue.LRT)') +
geom_point(position = position_jitter(width = 0.01, height = 0.01)) +
geom_hline(yintercept=-log10(0.05), linetype="dashed", color = "gray", size=1) +
#geom_vline(xintercept=0.8, linetype="dashed", color = "red", size=1) +
geom_text_repel(aes(label = feature.labs), size = 2) +
#scale_color_manual(values = c("#00AFBB", "#E7B800", "#FC4E07"))
theme_classic()
ggsave(file.path(saved.dic, 'nonprogressor vs progressor Tvalue BH_correction.png'), height = 6, width = 6, dpi = 300)
ggsave(file.path(saved.dic, 'nonprogressor vs progressor Tvalue BH_correction.pdf'), height = 6, width = 6, dpi = 300, useDingbats=FALSE)
library("readxl")
folder.directory <- '../../0_Frozen_Dataset/reslidesfromprogressors'
filename <- 'ProgAb_demo.csv'
# csv files
meta.progressors <- read.csv(file.path(folder.directory, filename))
index <- which(meta.progressors$timeToTB == 999)
meta.progressors[index, 10] <- NA
meta.progressors$VisitType <- as.character(meta.progressors$VisitType)
index <- which(meta.progressors$VisitType == "D0")
meta.progressors[index, 4] <- "D000"
library("readxl")
folder.directory <- '../../0_Frozen_Dataset/reslidesfromprogressors'
filename <- '20200511_ACS_summary_data_for_Chuangqi_with_plate.xlsx'
# Before reading data, we will return the names of the sheets for later use:
sheets.name <- excel_sheets(file.path(folder.directory, filename))
# xlsx files
progressors <- read_excel(file.path(folder.directory, filename), sheet = "progressors")
SampleID <- progressors$`Sample ID`
SampleID <- gsub("/", "", SampleID)
SampleID <- substring(SampleID, 2)
progressors$`Sample ID` <- as.numeric(SampleID)
meta.sero.data <- meta.progressors
sero.data.index <- c()
for(index in 1 : dim(meta.progressors)[1]){
temp.meta <- meta.progressors[index, ]
ID.index <- which(progressors$`Sample ID` == temp.meta$SubjectID)
VisitType.index <- which(progressors$VisitType == temp.meta$VisitType)
index <- intersect(ID.index, VisitType.index)
#print(index)
if(length(index) == 0){
sero.data.index <- c(sero.data.index, NA)
}else{
sero.data.index <- c(sero.data.index, index)
}
}
meta.sero.data <- meta.sero.data[!is.na(sero.data.index), ]
sero.data.index <- sero.data.index[!is.na(sero.data.index)]
sero.data <- progressors[sero.data.index, c(3, 7, 9:dim(progressors)[2])]
#Remove the 'Ebola' and 'HA'
eliminating.antigen <- c('Ebola', 'HA', 'CMV', 'EBV')
Ebola.related <- grep('Ebola', colnames(sero.data), value=TRUE)
HA.related <- grep('HA', colnames(sero.data), value=TRUE)
CMV.related <- grep('CMV', colnames(sero.data), value=TRUE)
EBV.related <- grep('EBV', colnames(sero.data), value=TRUE)
excluded.features <- c(Ebola.related, HA.related, CMV.related, EBV.related)
feature.index <- which(colnames(sero.data) %in% excluded.features)
sero.data <- sero.data[, -feature.index]
meta.sero.data <- cbind(meta.sero.data, sero.data)
meta.sero.data$aliquot_plate <- factor(meta.sero.data$aliquot_plate)
saveRDS(meta.sero.data, 'meta.sero.data.RDS')
meta.sero.data <- readRDS('meta.sero.data.RDS')
feature.name <- colnames(meta.sero.data)
feature.name <- gsub("/", "_", feature.name)
colnames(meta.sero.data) <- feature.name
meta.sero.data <- readRDS('meta.sero.data.RDS')
feature.name <- colnames(meta.sero.data)
feature.name <- gsub("/", "_", feature.name)
colnames(meta.sero.data) <- feature.name
feature.name <- colnames(meta.sero.data)[13:110]
meta.sero.data$SubjectID <- factor(meta.sero.data$SubjectID)
meta.sero.data$Progressor <- factor(as.character(meta.sero.data$Progressor))
meta.sero.data$Group <- factor(meta.sero.data$Group, levels = c('non-progressor', 'progressor'))
library(lme4)
#Create a folder to save the results.
saved.dic <- './LinearMixedModel.VisitDate'
if (!dir.exists(saved.dic)){
dir.create((saved.dic))
}
#Build two models with or without clinical.label and then compare the significance using anova (likehood ratio test)
pvalue <- c()
coefficient <- data.frame()
t.value <- data.frame()
for(feat.index in 1:length(feature.name)){
response <- feature.name[feat.index]
print(response)
temp.data.mlm <- meta.sero.data[, c(1:12, feat.index + 12)]
colnames(temp.data.mlm)[13] <- 'response'
#Basic model without considering Pat.clinical.label variable.
model.null <- lmer(response ~ 1 + Sex + AgeAtLastBirthDay + SchoolCode + VisitType  + (1|SubjectID), data = temp.data.mlm, REML = FALSE)
saveRDS(summary(model.null), file.path(saved.dic, paste(response, 'null.model.RDS')))
saveRDS(coef(model.null)$SubjectID, file.path(saved.dic, paste(response, 'null.mode.coeff.RDS')))
print("Full")
#Alternative model with Pat.clinical.label variable.
model.alternative <- lmer(response ~ 1 + Sex + AgeAtLastBirthDay + SchoolCode + VisitType + Group  + (1|SubjectID), data = temp.data.mlm, REML = FALSE)
saveRDS(summary(model.alternative), file.path(saved.dic, paste(response, 'alternative.model.RDS')))
saveRDS(coef(model.alternative)$SubjectID, file.path(saved.dic, paste(response, 'alternative.mode.coeff.RDS')))
#
#model.alternative Summary
summary.model.alternative <- summary(model.alternative)
coefficient <- rbind(coefficient, summary.model.alternative$coefficients[, 1])
t.value <- rbind(t.value, summary.model.alternative$coefficients[, 3])
#Likelihood ratio test
LRT <- anova(model.alternative, model.null)
saveRDS(LRT, file.path(saved.dic, paste(response, 'LRT.RDS')))
pvalue <- c(pvalue, LRT$`Pr(>Chisq)`[2])
}
saveRDS(pvalue, 'pvalue.RDS')
saveRDS(coefficient, 'coefficient.RDS')
colnames(coefficient) <- rownames(summary.model.alternative$coefficients)
rownames(coefficient) <- feature.name
coefficient.pLRT <- coefficient
coefficient.pLRT$pvalue <- pvalue
saveRDS(coefficient.pLRT, 'coefficient.pLRT.value.RDS')
colnames(t.value) <- rownames(summary.model.alternative$coefficients)
rownames(t.value) <- feature.name
t.value.pLRT <- t.value
t.value.pLRT$pvalue <- pvalue
saveRDS(t.value.pLRT, 't.value.pLRT.value.RDS')
library(gridExtra)
library(grid)
library(ggplot2)
library(lattice)
library(ggrepel)
#Create a folder to save the results.
saved.dic <- './Visualization.LinearMixedModel.VisitDate'
if (!dir.exists(saved.dic)){
dir.create((saved.dic))
}
coefficient.size.pLRT <- readRDS('coefficient.pLRT.value.RDS')
# Add text to the plot
.labs <- rownames(coefficient.size.pLRT)
# effect size between label2 vs 1
ggplot(coefficient.size.pLRT, aes(Groupprogressor, -log10(pvalue))) +
labs(x = 'Coefficient: nonprogressor vs progressor', y = '-log10(pvalue.LRT') +
geom_point(position = position_jitter(width = 0.01, height = 0.01)) +
geom_hline(yintercept=-log10(0.05), linetype="dashed", color = "red", size=1) +
#geom_vline(xintercept=0.8, linetype="dashed", color = "red", size=1) +
geom_text_repel(aes(label = .labs), size = 2) +
#scale_color_manual(values = c("#00AFBB", "#E7B800", "#FC4E07"))
theme_classic()
ggsave(file.path(saved.dic, 'nonprogressor vs progressor coefficient.png'), height = 6, width = 6, dpi = 300)
t.value.size.pLRT <- readRDS('t.value.pLRT.value.RDS')
# Add text to the plot
.labs <- rownames(t.value.size.pLRT)
# effect size between label2 vs 1
ggplot(t.value.size.pLRT, aes(Groupprogressor, -log10(pvalue))) +
labs(x = 'T value: nonprogressor vs progressor', y = '-log10(pvalue.LRT') +
geom_point(position = position_jitter(width = 0.01, height = 0.01)) +
geom_hline(yintercept=-log10(0.05), linetype="dashed", color = "red", size=1) +
#geom_vline(xintercept=0.8, linetype="dashed", color = "red", size=1) +
geom_text_repel(aes(label = .labs), size = 2) +
#scale_color_manual(values = c("#00AFBB", "#E7B800", "#FC4E07"))
theme_classic()
ggsave(file.path(saved.dic, 'nonprogressor vs progressor Tvalue.png'), height = 6, width = 6, dpi = 300)
library(ggplot2)
library(ggrepel)
t.value.size.pLRT <- readRDS('t.value.pLRT.value.RDS')
#Adjust the pvalue based on BH method.
pvalue.adjust <- p.adjust(t.value.size.pLRT$pvalue, method = 'BH')
t.value.size.pLRT$pvalue.adjust <- pvalue.adjust
saveRDS(t.value.size.pLRT, 't.value.pLRT.value.RDS')
# Add text to the plot
feature.labs <- rownames(t.value.size.pLRT)
# Add text to the plot
.labs <- rownames(t.value.size.pLRT)
t.value.size.pLRT$feature_class <- rep("FcR", length = nrow(t.value.size.pLRT))
t.value.size.pLRT$feature_class[which(grepl("IgG|IgA|IgM", .labs))] <- "titer"
t.value.size.pLRT$feature_class[which(grepl("RCA|SNA", .labs))] <- "Lectin"
t.value.size.pLRT$feature_class[which(grepl("ADNP|ADCP", .labs))] <- "Function"
t.value.size.pLRT$feature_class <- factor(t.value.size.pLRT$feature_class)
t.value.size.pLRT$Epitope <- rep("PPD", length = nrow(t.value.size.pLRT))
t.value.size.pLRT$Epitope[which(grepl("_ESAT6", .labs))] <- "ESAT6"
t.value.size.pLRT$Epitope[which(grepl("_Hspx", .labs))] <- "Hspx"
t.value.size.pLRT$Epitope[which(grepl("_CFP10", .labs))] <- "CFP10"
t.value.size.pLRT$Epitope[which(grepl("_Ag85", .labs))] <- "Ag85"
t.value.size.pLRT$Epitope[which(grepl("_CMV_pentamer", .labs))] <- "CMV_pentamer"
t.value.size.pLRT$Epitope[which(grepl("_CMV_gB", .labs))] <- "CMV_gB"
t.value.size.pLRT$Epitope[which(grepl("_EBV", .labs))] <- "EBV"
t.value.size.pLRT$Epitope[which(grepl("_Tbad", .labs))] <- "Tbad"
t.value.size.pLRT$Epitope[which(grepl("_LAM", .labs))] <- "LAM"
# Add text to the plot
feature.labs <- rownames(t.value.size.pLRT)
temp.index <- which(pvalue.adjust >= 0.05)
feature.labs[temp.index] <- ""
# effect size between label2 vs 1
ggplot(t.value.size.pLRT, aes(Groupprogressor, -log10(pvalue.adjust))) +
labs(x = 'T value: progressor vs nonprogressor', y = '-log10(BH.adjused.pvalue.LRT)') +
geom_point(aes(color = Epitope),position = position_jitter(width = 0.01, height = 0.01)) +
geom_hline(yintercept=-log10(0.05), linetype="dashed", color = "gray", size=1) +
#geom_vline(xintercept=0.8, linetype="dashed", color = "red", size=1) +
geom_text_repel(aes(label = feature.labs), size = 2) +
#scale_color_manual(values = c("#00AFBB", "#E7B800", "#FC4E07"))
theme_classic()
ggsave(file.path(saved.dic, 'nonprogressor vs progressor Tvalue BH_correction_v4.png'), height = 6, width = 6, dpi = 300)
ggsave(file.path(saved.dic, 'nonprogressor vs progressor Tvalue BH_correction_v4.pdf'), height = 6, width = 6, dpi = 300, useDingbats=FALSE)
# effect size between label2 vs 1
ggplot(t.value.size.pLRT, aes(Groupprogressor, -log10(pvalue.adjust))) +
labs(x = 'T value: nonprogressor vs progressor', y = '-log10(BH.adjused.pvalue.LRT)') +
geom_point(position = position_jitter(width = 0.01, height = 0.01)) +
geom_hline(yintercept=-log10(0.05), linetype="dashed", color = "gray", size=1) +
#geom_vline(xintercept=0.8, linetype="dashed", color = "red", size=1) +
geom_text_repel(aes(label = feature.labs), size = 2) +
#scale_color_manual(values = c("#00AFBB", "#E7B800", "#FC4E07"))
theme_classic()
ggsave(file.path(saved.dic, 'nonprogressor vs progressor Tvalue BH_correction.png'), height = 6, width = 6, dpi = 300)
ggsave(file.path(saved.dic, 'nonprogressor vs progressor Tvalue BH_correction.pdf'), height = 6, width = 6, dpi = 300, useDingbats=FALSE)
library(ggplot2)
library(ggrepel)
t.value.size.pLRT <- readRDS('t.value.pLRT.value.RDS')
#Adjust the pvalue based on BH method.
pvalue.adjust <- p.adjust(t.value.size.pLRT$pvalue, method = 'BH')
t.value.size.pLRT$pvalue.adjust <- pvalue.adjust
saveRDS(t.value.size.pLRT, 't.value.pLRT.value.RDS')
# Add text to the plot
feature.labs <- rownames(t.value.size.pLRT)
# Add text to the plot
.labs <- rownames(t.value.size.pLRT)
t.value.size.pLRT$feature_class <- rep("FcR", length = nrow(t.value.size.pLRT))
t.value.size.pLRT$feature_class[which(grepl("IgG|IgA|IgM", .labs))] <- "titer"
t.value.size.pLRT$feature_class[which(grepl("RCA|SNA", .labs))] <- "Lectin"
t.value.size.pLRT$feature_class[which(grepl("ADNP|ADCP", .labs))] <- "Function"
t.value.size.pLRT$feature_class <- factor(t.value.size.pLRT$feature_class)
t.value.size.pLRT$Antigen <- rep("PPD", length = nrow(t.value.size.pLRT))
t.value.size.pLRT$Antigen[which(grepl("_ESAT6", .labs))] <- "ESAT6"
t.value.size.pLRT$Antigen[which(grepl("_Hspx", .labs))] <- "Hspx"
t.value.size.pLRT$Antigen[which(grepl("_CFP10", .labs))] <- "CFP10"
t.value.size.pLRT$Antigen[which(grepl("_Ag85", .labs))] <- "Ag85"
t.value.size.pLRT$Antigen[which(grepl("_CMV_pentamer", .labs))] <- "CMV_pentamer"
t.value.size.pLRT$Antigen[which(grepl("_CMV_gB", .labs))] <- "CMV_gB"
t.value.size.pLRT$Antigen[which(grepl("_EBV", .labs))] <- "EBV"
t.value.size.pLRT$Antigen[which(grepl("_Tbad", .labs))] <- "Tbad"
t.value.size.pLRT$Antigen[which(grepl("_LAM", .labs))] <- "LAM"
# Add text to the plot
feature.labs <- rownames(t.value.size.pLRT)
temp.index <- which(pvalue.adjust >= 0.05)
feature.labs[temp.index] <- ""
# effect size between label2 vs 1
ggplot(t.value.size.pLRT, aes(Groupprogressor, -log10(pvalue.adjust))) +
labs(x = 'T value: progressor vs nonprogressor', y = '-log10(BH.adjused.pvalue.LRT)') +
geom_point(aes(color = Antigen),position = position_jitter(width = 0.01, height = 0.01)) +
geom_hline(yintercept=-log10(0.05), linetype="dashed", color = "gray", size=1) +
#geom_vline(xintercept=0.8, linetype="dashed", color = "red", size=1) +
geom_text_repel(aes(label = feature.labs), size = 2) +
#scale_color_manual(values = c("#00AFBB", "#E7B800", "#FC4E07"))
theme_classic()
ggsave(file.path(saved.dic, 'nonprogressor vs progressor Tvalue BH_correction_v4.png'), height = 6, width = 6, dpi = 300)
ggsave(file.path(saved.dic, 'nonprogressor vs progressor Tvalue BH_correction_v4.pdf'), height = 6, width = 6, dpi = 300, useDingbats=FALSE)
# effect size between label2 vs 1
ggplot(t.value.size.pLRT, aes(Groupprogressor, -log10(pvalue.adjust))) +
labs(x = 'T value: nonprogressor vs progressor', y = '-log10(BH.adjused.pvalue.LRT)') +
geom_point(position = position_jitter(width = 0.01, height = 0.01)) +
geom_hline(yintercept=-log10(0.05), linetype="dashed", color = "gray", size=1) +
#geom_vline(xintercept=0.8, linetype="dashed", color = "red", size=1) +
geom_text_repel(aes(label = feature.labs), size = 3) +
#scale_color_manual(values = c("#00AFBB", "#E7B800", "#FC4E07"))
theme_classic()
ggsave(file.path(saved.dic, 'nonprogressor vs progressor Tvalue BH_correction.png'), height = 6, width = 6, dpi = 300)
ggsave(file.path(saved.dic, 'nonprogressor vs progressor Tvalue BH_correction.pdf'), height = 6, width = 6, dpi = 300, useDingbats=FALSE)
library(ggplot2)
library(ggrepel)
t.value.size.pLRT <- readRDS('t.value.pLRT.value.RDS')
#Adjust the pvalue based on BH method.
pvalue.adjust <- p.adjust(t.value.size.pLRT$pvalue, method = 'BH')
t.value.size.pLRT$pvalue.adjust <- pvalue.adjust
saveRDS(t.value.size.pLRT, 't.value.pLRT.value.RDS')
# Add text to the plot
feature.labs <- rownames(t.value.size.pLRT)
# Add text to the plot
.labs <- rownames(t.value.size.pLRT)
t.value.size.pLRT$feature_class <- rep("FcR", length = nrow(t.value.size.pLRT))
t.value.size.pLRT$feature_class[which(grepl("IgG|IgA|IgM", .labs))] <- "titer"
t.value.size.pLRT$feature_class[which(grepl("RCA|SNA", .labs))] <- "Lectin"
t.value.size.pLRT$feature_class[which(grepl("ADNP|ADCP", .labs))] <- "Function"
t.value.size.pLRT$feature_class <- factor(t.value.size.pLRT$feature_class)
t.value.size.pLRT$Antigen <- rep("PPD", length = nrow(t.value.size.pLRT))
t.value.size.pLRT$Antigen[which(grepl("_ESAT6", .labs))] <- "ESAT6"
t.value.size.pLRT$Antigen[which(grepl("_Hspx", .labs))] <- "Hspx"
t.value.size.pLRT$Antigen[which(grepl("_CFP10", .labs))] <- "CFP10"
t.value.size.pLRT$Antigen[which(grepl("_Ag85", .labs))] <- "Ag85"
t.value.size.pLRT$Antigen[which(grepl("_CMV_pentamer", .labs))] <- "CMV_pentamer"
t.value.size.pLRT$Antigen[which(grepl("_CMV_gB", .labs))] <- "CMV_gB"
t.value.size.pLRT$Antigen[which(grepl("_EBV", .labs))] <- "EBV"
t.value.size.pLRT$Antigen[which(grepl("_Tbad", .labs))] <- "Tbad"
t.value.size.pLRT$Antigen[which(grepl("_LAM", .labs))] <- "LAM"
# Add text to the plot
feature.labs <- rownames(t.value.size.pLRT)
temp.index <- which(pvalue.adjust >= 0.05)
feature.labs[temp.index] <- ""
# effect size between label2 vs 1
ggplot(t.value.size.pLRT, aes(Groupprogressor, -log10(pvalue.adjust))) +
labs(x = 'T value: progressor vs nonprogressor', y = '-log10(BH.adjused.pvalue.LRT)') +
geom_point(aes(color = Antigen),position = position_jitter(width = 0.01, height = 0.01)) +
geom_hline(yintercept=-log10(0.05), linetype="dashed", color = "gray", size=1) +
#geom_vline(xintercept=0.8, linetype="dashed", color = "red", size=1) +
geom_text_repel(aes(label = feature.labs), size = 4) +
#scale_color_manual(values = c("#00AFBB", "#E7B800", "#FC4E07"))
theme_classic()
ggsave(file.path(saved.dic, 'nonprogressor vs progressor Tvalue BH_correction_v4.png'), height = 6, width = 6, dpi = 300)
ggsave(file.path(saved.dic, 'nonprogressor vs progressor Tvalue BH_correction_v4.pdf'), height = 6, width = 6, dpi = 300, useDingbats=FALSE)
# effect size between label2 vs 1
ggplot(t.value.size.pLRT, aes(Groupprogressor, -log10(pvalue.adjust))) +
labs(x = 'T value: nonprogressor vs progressor', y = '-log10(BH.adjused.pvalue.LRT)') +
geom_point(position = position_jitter(width = 0.01, height = 0.01)) +
geom_hline(yintercept=-log10(0.05), linetype="dashed", color = "gray", size=1) +
#geom_vline(xintercept=0.8, linetype="dashed", color = "red", size=1) +
geom_text_repel(aes(label = feature.labs), size = 3) +
#scale_color_manual(values = c("#00AFBB", "#E7B800", "#FC4E07"))
theme_classic()
ggsave(file.path(saved.dic, 'nonprogressor vs progressor Tvalue BH_correction.png'), height = 6, width = 6, dpi = 300)
ggsave(file.path(saved.dic, 'nonprogressor vs progressor Tvalue BH_correction.pdf'), height = 6, width = 6, dpi = 300, useDingbats=FALSE)
library(ggplot2)
library(ggrepel)
t.value.size.pLRT <- readRDS('t.value.pLRT.value.RDS')
#Adjust the pvalue based on BH method.
pvalue.adjust <- p.adjust(t.value.size.pLRT$pvalue, method = 'BH')
t.value.size.pLRT$pvalue.adjust <- pvalue.adjust
saveRDS(t.value.size.pLRT, 't.value.pLRT.value.RDS')
# Add text to the plot
feature.labs <- rownames(t.value.size.pLRT)
# Add text to the plot
.labs <- rownames(t.value.size.pLRT)
t.value.size.pLRT$feature_class <- rep("FcR", length = nrow(t.value.size.pLRT))
t.value.size.pLRT$feature_class[which(grepl("IgG|IgA|IgM", .labs))] <- "titer"
t.value.size.pLRT$feature_class[which(grepl("RCA|SNA", .labs))] <- "Lectin"
t.value.size.pLRT$feature_class[which(grepl("ADNP|ADCP", .labs))] <- "Function"
t.value.size.pLRT$feature_class <- factor(t.value.size.pLRT$feature_class)
t.value.size.pLRT$Antigen <- rep("PPD", length = nrow(t.value.size.pLRT))
t.value.size.pLRT$Antigen[which(grepl("_ESAT6", .labs))] <- "ESAT6"
t.value.size.pLRT$Antigen[which(grepl("_Hspx", .labs))] <- "Hspx"
t.value.size.pLRT$Antigen[which(grepl("_CFP10", .labs))] <- "CFP10"
t.value.size.pLRT$Antigen[which(grepl("_Ag85", .labs))] <- "Ag85"
t.value.size.pLRT$Antigen[which(grepl("_CMV_pentamer", .labs))] <- "CMV_pentamer"
t.value.size.pLRT$Antigen[which(grepl("_CMV_gB", .labs))] <- "CMV_gB"
t.value.size.pLRT$Antigen[which(grepl("_EBV", .labs))] <- "EBV"
t.value.size.pLRT$Antigen[which(grepl("_Tbad", .labs))] <- "Tbad"
t.value.size.pLRT$Antigen[which(grepl("_LAM", .labs))] <- "LAM"
# Add text to the plot
feature.labs <- rownames(t.value.size.pLRT)
temp.index <- which(pvalue.adjust >= 0.05)
feature.labs[temp.index] <- ""
# effect size between label2 vs 1
ggplot(t.value.size.pLRT, aes(Groupprogressor, -log10(pvalue.adjust))) +
labs(x = 'T value: progressor vs nonprogressor', y = '-log10(BH.adjused.pvalue.LRT)') +
geom_point(aes(color = Antigen),position = position_jitter(width = 0.01, height = 0.01)) +
geom_hline(yintercept=-log10(0.05), linetype="dashed", color = "gray", size=1) +
#geom_vline(xintercept=0.8, linetype="dashed", color = "red", size=1) +
geom_text_repel(aes(label = feature.labs), size = 3.5) +
#scale_color_manual(values = c("#00AFBB", "#E7B800", "#FC4E07"))
theme_classic()
ggsave(file.path(saved.dic, 'nonprogressor vs progressor Tvalue BH_correction_v4.png'), height = 6, width = 6, dpi = 300)
ggsave(file.path(saved.dic, 'nonprogressor vs progressor Tvalue BH_correction_v4.pdf'), height = 6, width = 6, dpi = 300, useDingbats=FALSE)
# effect size between label2 vs 1
ggplot(t.value.size.pLRT, aes(Groupprogressor, -log10(pvalue.adjust))) +
labs(x = 'T value: nonprogressor vs progressor', y = '-log10(BH.adjused.pvalue.LRT)') +
geom_point(position = position_jitter(width = 0.01, height = 0.01)) +
geom_hline(yintercept=-log10(0.05), linetype="dashed", color = "gray", size=1) +
#geom_vline(xintercept=0.8, linetype="dashed", color = "red", size=1) +
geom_text_repel(aes(label = feature.labs), size = 3) +
#scale_color_manual(values = c("#00AFBB", "#E7B800", "#FC4E07"))
theme_classic()
ggsave(file.path(saved.dic, 'nonprogressor vs progressor Tvalue BH_correction.png'), height = 6, width = 6, dpi = 300)
ggsave(file.path(saved.dic, 'nonprogressor vs progressor Tvalue BH_correction.pdf'), height = 6, width = 6, dpi = 300, useDingbats=FALSE)
library(ggplot2)
library(ggrepel)
t.value.size.pLRT <- readRDS('t.value.pLRT.value.RDS')
#Adjust the pvalue based on BH method.
pvalue.adjust <- p.adjust(t.value.size.pLRT$pvalue, method = 'BH')
t.value.size.pLRT$pvalue.adjust <- pvalue.adjust
saveRDS(t.value.size.pLRT, 't.value.pLRT.value.RDS')
# Add text to the plot
feature.labs <- rownames(t.value.size.pLRT)
# Add text to the plot
.labs <- rownames(t.value.size.pLRT)
t.value.size.pLRT$feature_class <- rep("FcR", length = nrow(t.value.size.pLRT))
t.value.size.pLRT$feature_class[which(grepl("IgG|IgA|IgM", .labs))] <- "titer"
t.value.size.pLRT$feature_class[which(grepl("RCA|SNA", .labs))] <- "Lectin"
t.value.size.pLRT$feature_class[which(grepl("ADNP|ADCP", .labs))] <- "Function"
t.value.size.pLRT$feature_class <- factor(t.value.size.pLRT$feature_class)
t.value.size.pLRT$Antigen <- rep("PPD", length = nrow(t.value.size.pLRT))
t.value.size.pLRT$Antigen[which(grepl("_ESAT6", .labs))] <- "ESAT6"
t.value.size.pLRT$Antigen[which(grepl("_Hspx", .labs))] <- "Hspx"
t.value.size.pLRT$Antigen[which(grepl("_CFP10", .labs))] <- "CFP10"
t.value.size.pLRT$Antigen[which(grepl("_Ag85", .labs))] <- "Ag85"
t.value.size.pLRT$Antigen[which(grepl("_CMV_pentamer", .labs))] <- "CMV_pentamer"
t.value.size.pLRT$Antigen[which(grepl("_CMV_gB", .labs))] <- "CMV_gB"
t.value.size.pLRT$Antigen[which(grepl("_EBV", .labs))] <- "EBV"
t.value.size.pLRT$Antigen[which(grepl("_Tbad", .labs))] <- "Tbad"
t.value.size.pLRT$Antigen[which(grepl("_LAM", .labs))] <- "LAM"
# Add text to the plot
feature.labs <- rownames(t.value.size.pLRT)
temp.index <- which(pvalue.adjust >= 0.05)
feature.labs[temp.index] <- ""
# effect size between label2 vs 1
ggplot(t.value.size.pLRT, aes(Groupprogressor, -log10(pvalue.adjust))) +
labs(x = 'T value: progressor vs nonprogressor', y = '-log10(BH.adjused.pvalue.LRT)') +
geom_point(aes(color = Antigen), size = 3, position = position_jitter(width = 0.01, height = 0.01)) +
geom_hline(yintercept=-log10(0.05), linetype="dashed", color = "gray", size=1) +
#geom_vline(xintercept=0.8, linetype="dashed", color = "red", size=1) +
geom_text_repel(aes(label = feature.labs), size = 3.5) +
#scale_color_manual(values = c("#00AFBB", "#E7B800", "#FC4E07"))
theme_classic()
ggsave(file.path(saved.dic, 'nonprogressor vs progressor Tvalue BH_correction_v4.png'), height = 5, width = 5, dpi = 300)
ggsave(file.path(saved.dic, 'nonprogressor vs progressor Tvalue BH_correction_v4.pdf'), height = 5, width = 5, dpi = 300, useDingbats=FALSE)
# effect size between label2 vs 1
ggplot(t.value.size.pLRT, aes(Groupprogressor, -log10(pvalue.adjust))) +
labs(x = 'T value: nonprogressor vs progressor', y = '-log10(BH.adjused.pvalue.LRT)') +
geom_point(position = position_jitter(width = 0.01, height = 0.01)) +
geom_hline(yintercept=-log10(0.05), linetype="dashed", color = "gray", size=1) +
#geom_vline(xintercept=0.8, linetype="dashed", color = "red", size=1) +
geom_text_repel(aes(label = feature.labs), size = 3) +
#scale_color_manual(values = c("#00AFBB", "#E7B800", "#FC4E07"))
theme_classic()
ggsave(file.path(saved.dic, 'nonprogressor vs progressor Tvalue BH_correction.png'), height = 6, width = 6, dpi = 300)
ggsave(file.path(saved.dic, 'nonprogressor vs progressor Tvalue BH_correction.pdf'), height = 6, width = 6, dpi = 300, useDingbats=FALSE)
library(ggplot2)
library(ggrepel)
t.value.size.pLRT <- readRDS('t.value.pLRT.value.RDS')
#Adjust the pvalue based on BH method.
pvalue.adjust <- p.adjust(t.value.size.pLRT$pvalue, method = 'BH')
t.value.size.pLRT$pvalue.adjust <- pvalue.adjust
saveRDS(t.value.size.pLRT, 't.value.pLRT.value.RDS')
# Add text to the plot
feature.labs <- rownames(t.value.size.pLRT)
# Add text to the plot
.labs <- rownames(t.value.size.pLRT)
t.value.size.pLRT$feature_class <- rep("FcR", length = nrow(t.value.size.pLRT))
t.value.size.pLRT$feature_class[which(grepl("IgG|IgA|IgM", .labs))] <- "titer"
t.value.size.pLRT$feature_class[which(grepl("RCA|SNA", .labs))] <- "Lectin"
t.value.size.pLRT$feature_class[which(grepl("ADNP|ADCP", .labs))] <- "Function"
t.value.size.pLRT$feature_class <- factor(t.value.size.pLRT$feature_class)
t.value.size.pLRT$Antigen <- rep("PPD", length = nrow(t.value.size.pLRT))
t.value.size.pLRT$Antigen[which(grepl("_ESAT6", .labs))] <- "ESAT6"
t.value.size.pLRT$Antigen[which(grepl("_Hspx", .labs))] <- "Hspx"
t.value.size.pLRT$Antigen[which(grepl("_CFP10", .labs))] <- "CFP10"
t.value.size.pLRT$Antigen[which(grepl("_Ag85", .labs))] <- "Ag85"
t.value.size.pLRT$Antigen[which(grepl("_CMV_pentamer", .labs))] <- "CMV_pentamer"
t.value.size.pLRT$Antigen[which(grepl("_CMV_gB", .labs))] <- "CMV_gB"
t.value.size.pLRT$Antigen[which(grepl("_EBV", .labs))] <- "EBV"
t.value.size.pLRT$Antigen[which(grepl("_Tbad", .labs))] <- "Tbad"
t.value.size.pLRT$Antigen[which(grepl("_LAM", .labs))] <- "LAM"
# Add text to the plot
feature.labs <- rownames(t.value.size.pLRT)
temp.index <- which(pvalue.adjust >= 0.05)
feature.labs[temp.index] <- ""
# effect size between label2 vs 1
ggplot(t.value.size.pLRT, aes(Groupprogressor, -log10(pvalue.adjust))) +
labs(x = 'T value: progressor vs nonprogressor', y = '-log10(BH.adjused.pvalue.LRT)') +
geom_point(aes(color = Antigen), size = 2, position = position_jitter(width = 0.01, height = 0.01)) +
geom_hline(yintercept=-log10(0.05), linetype="dashed", color = "gray", size=1) +
#geom_vline(xintercept=0.8, linetype="dashed", color = "red", size=1) +
geom_text_repel(aes(label = feature.labs), size = 3.5) +
#scale_color_manual(values = c("#00AFBB", "#E7B800", "#FC4E07"))
theme_classic()
ggsave(file.path(saved.dic, 'nonprogressor vs progressor Tvalue BH_correction_v4.png'), height = 5, width = 5, dpi = 300)
ggsave(file.path(saved.dic, 'nonprogressor vs progressor Tvalue BH_correction_v4.pdf'), height = 5, width = 5, dpi = 300, useDingbats=FALSE)
# effect size between label2 vs 1
ggplot(t.value.size.pLRT, aes(Groupprogressor, -log10(pvalue.adjust))) +
labs(x = 'T value: nonprogressor vs progressor', y = '-log10(BH.adjused.pvalue.LRT)') +
geom_point(position = position_jitter(width = 0.01, height = 0.01)) +
geom_hline(yintercept=-log10(0.05), linetype="dashed", color = "gray", size=1) +
#geom_vline(xintercept=0.8, linetype="dashed", color = "red", size=1) +
geom_text_repel(aes(label = feature.labs), size = 3) +
#scale_color_manual(values = c("#00AFBB", "#E7B800", "#FC4E07"))
theme_classic()
ggsave(file.path(saved.dic, 'nonprogressor vs progressor Tvalue BH_correction.png'), height = 6, width = 6, dpi = 300)
ggsave(file.path(saved.dic, 'nonprogressor vs progressor Tvalue BH_correction.pdf'), height = 6, width = 6, dpi = 300, useDingbats=FALSE)
model.null
model.alternative
packageVersion("ggraph")
View(temp.data.mlm)
unique(temp.data.mlm$VisitType)
unique(temp.data.mlm$SchoolCode)
