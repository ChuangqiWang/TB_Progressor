"0","```r
library(systemsseRology)
set.seed(0)  # random seed for reproducibility
source(\"Plot_VIP_bar.R\")
source(\"Plot_PCA.R\")
X <- X_sel
y <- Patient.ID.filter.group$progressors.Group

df_features <- data.frame(name = colnames(X))
df_features$label <- gsub(\"_\", \" \", df_features$name)
df_features$antigen <- gsub(\"_.*\", \"\", df_features$name)
df_features$antigen <- factor(df_features$antigen)
df_features$feature_class <- rep(NA, length = nrow(df_features))
df_features$feature_class[which(grepl(\"IgG|IgA|IgM\", df_features$name))] <- \"titer\"
df_features$feature_class[which(grepl(\"FcR\", df_features$name))] <- \"FcR\"
df_features$feature_class <- factor(df_features$feature_class)

# general options for plotting
opts_plot <- list(df_features = df_features,
                  loading_alpha = 1, # transparency for the loadings
                  score_alpha = 1, # transparency for the scores
                  LV_ind = c(1,2), # which LVs to plot
                  color_features = \"antigen\", # according to which property (defined in df_features) the features should be color-coded
                  colors = meta_colors,
                  y_name = \"group\") 

# Perform a simple PCA using the interface function pca_ropls
model_pca <- pca_ropls(X)
plt_scores_pca <- visualize_PCA_scores(model_pca, y,  options = opts_plot)
print(plt_scores_pca)
filename <- 'PCA_Score.png'
ggsave(file = file.path(saved.dir, filename), width = 4.5, height = 3, dpi = 300)
```"
