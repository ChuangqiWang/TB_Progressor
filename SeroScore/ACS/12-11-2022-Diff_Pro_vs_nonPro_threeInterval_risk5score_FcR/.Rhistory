saveRDS(Data_group, file.path(output_dir, "Data_group.RDS"))
saveRDS(Data_combining, file.path(output_dir, "Data_combining.RDS"))
write.csv(Data_group, file.path(output_dir, "Data_group.csv"))
write.csv(Data_combining, file.path(output_dir, "Data_combining.csv"))
library(pheatmap)
annotation_row <- data.frame(group1 = Data_group, group = Data_group)
rownames(annotation_row) <- rownames(Data_combining)
ordered_index <- order(annotation_row$group, annotation_row$group1)
annotation_row_ordered <- annotation_row[ordered_index, ]
data.sero.ordered <- scale(Data_combining[ordered_index, ], center = TRUE, scale = TRUE)
mat_breaks <- quantile_breaks(na.omit(unlist(data.sero.ordered)), n = 100)
png(file.path(output_dir, "heatmap.scaled.png"), width=3560, height=1940, res = 300)
pheatmap(
mat = data.sero.ordered,
border_color = NA,
color = colorRampPalette(rev(brewer.pal(n = 8, name = "RdYlBu")))(length(mat_breaks) - 1),
#color = inferno(length(mat_breaks) - 1),
breaks = mat_breaks,
show_rownames = FALSE,
show_colnames = TRUE,
cluster_rows = FALSE,
cluster_cols = TRUE,
annotation_row = annotation_row_ordered,
annotation_colors = meta_colors,
fontsize = 6,
fontsize_col = 5,
fontsize_row = 5,
scale = "none",
main  = "Serology Data with Quantile Color Scale"
)
dev.off()
table(Data_group)
meta_colors <- list(
"group" = c(
"progressor" = "#AD07E3",
"non-progressor" = "#238b45"
),
"group1" = c(
"progressor" = "#AD07E3",
"non-progressor" = "#238b45"
)
)
set.seed(1986)
library(RColorBrewer)
library(viridis)
quantile_breaks <- function(xs, n = 10) {
breaks <- quantile(xs, probs = seq(0, 1, length.out = n))
breaks[!duplicated(breaks)]
}
folder <- "."
Progressor <- readRDS(file.path(paste0(folder, "/Progressor_allmonths_New"), "Progressor_allmonths.RDS"))
Progressor.Patient.ID.wGroup <- readRDS(file.path(paste0(folder, "/Progressor_allmonths_New"), "Progressor_PatientID.RDS"))
NonProgressor <- readRDS(file.path(paste0(folder, "/NonProgressors_New"), "NonProgressor.RDS"))
NonProgressor.Pat.IDs <- readRDS(file.path(paste0(folder, "/NonProgressors_New"), "NonProgressor.Patient.IDs.RDS"))
Syssero.Name <- readRDS(file.path(paste0(folder, "/NonProgressors_New"), "SystemSerogy.RDS"))
#
#Risk6 <- Syssero.Name[length(Syssero.Name)]
eliminating.antigen <- c('Ebola', 'HA', 'CMV', 'CMV_gB', 'CMV_pentamer', 'EBV')
Ebola.related <- grep('Ebola', Syssero.Name, value=TRUE)
HA.related <- grep('HA', Syssero.Name, value=TRUE)
CMV.related <- grep('CMV', Syssero.Name, value= TRUE)
EBV.related <- grep('EBV', Syssero.Name, value = TRUE)
AD.related <- grep('AD', Syssero.Name, value = TRUE)
excluded.features <- c(Ebola.related, HA.related, CMV.related, EBV.related, AD.related) #, Risk6)
feature.index <- which(Syssero.Name %in% excluded.features)
#
Syssero.Name <- setdiff(Syssero.Name, excluded.features)
#
Progressor <- Progressor[, -feature.index]
NonProgressor <- NonProgressor[, , -feature.index]
## Provide the dir name(i.e sub dir) that you want to create under main dir:
output_dir <- 'Progressor_allmonths'
if (!dir.exists(output_dir)){
dir.create(output_dir)
}
NonProgressor.Flag <- array(NA, dim = c(105, 5))
for(Pat.ID in 1 : 105){
for(Day.ID in 1 : 5){
temp.data <- NonProgressor[Pat.ID, Day.ID, ]
NonProgressor.Flag[Pat.ID, Day.ID] <- any(is.na(temp.data))
}
}
#Select the Pat.ID
#Put all together
Sample.ID <- c()
NonProgressor.selected <- array(NA, dim = c(1, dim(Progressor)[2]))
for(Pat.ID in 1 : 105){
temp.flag <- which(NonProgressor.Flag[Pat.ID, ] == FALSE)
if(length(temp.flag) > 0){
NonProgressor.selected <- rbind(NonProgressor.selected, NonProgressor[Pat.ID, temp.flag, ])
Sample.ID <- c(Sample.ID, paste0('NonP_', Pat.ID, '_', temp.flag))
}
}
NonProgressor.selected <- NonProgressor.selected[-1, ]
rownames(NonProgressor.selected) <- Sample.ID
colnames(NonProgressor.selected) <- Syssero.Name
temp.index <- which(apply(NonProgressor.selected, 1, function(x) all(is.na(x))))
if(length(temp.index) > 0){
NonProgressor.selected <- NonProgressor.selected[-temp.index, ]
}
View(NonProgressor.Flag)
View(NonProgressor.selected)
meta_colors <- list(
"group" = c(
"progressor" = "#AD07E3",
"non-progressor" = "#238b45"
),
"group1" = c(
"progressor" = "#AD07E3",
"non-progressor" = "#238b45"
)
)
set.seed(1986)
library(RColorBrewer)
library(viridis)
quantile_breaks <- function(xs, n = 10) {
breaks <- quantile(xs, probs = seq(0, 1, length.out = n))
breaks[!duplicated(breaks)]
}
folder <- "."
Progressor <- readRDS(file.path(paste0(folder, "/Progressor_allmonths_New"), "Progressor_allmonths.RDS"))
Progressor.Patient.ID.wGroup <- readRDS(file.path(paste0(folder, "/Progressor_allmonths_New"), "Progressor_PatientID.RDS"))
NonProgressor <- readRDS(file.path(paste0(folder, "/NonProgressors_New"), "NonProgressor.RDS"))
NonProgressor.Pat.IDs <- readRDS(file.path(paste0(folder, "/NonProgressors_New"), "NonProgressor.Patient.IDs.RDS"))
Syssero.Name <- readRDS(file.path(paste0(folder, "/NonProgressors_New"), "SystemSerogy.RDS"))
#
#Risk6 <- Syssero.Name[length(Syssero.Name)]
eliminating.antigen <- c('Ebola', 'HA', 'CMV', 'CMV_gB', 'CMV_pentamer', 'EBV')
Ebola.related <- grep('Ebola', Syssero.Name, value=TRUE)
HA.related <- grep('HA', Syssero.Name, value=TRUE)
CMV.related <- grep('CMV', Syssero.Name, value= TRUE)
EBV.related <- grep('EBV', Syssero.Name, value = TRUE)
AD.related <- grep('AD', Syssero.Name, value = TRUE)
excluded.features <- c(Ebola.related, HA.related, CMV.related, EBV.related, AD.related) #, Risk6)
feature.index <- which(Syssero.Name %in% excluded.features)
#
Syssero.Name <- setdiff(Syssero.Name, excluded.features)
#
Progressor <- Progressor[, -feature.index]
NonProgressor <- NonProgressor[, , -feature.index]
## Provide the dir name(i.e sub dir) that you want to create under main dir:
output_dir <- 'Progressor_allmonths'
if (!dir.exists(output_dir)){
dir.create(output_dir)
}
NonProgressor.Flag <- array(NA, dim = c(105, 5))
for(Pat.ID in 1 : 105){
for(Day.ID in 1 : 5){
temp.data <- NonProgressor[Pat.ID, Day.ID, ]
NonProgressor.Flag[Pat.ID, Day.ID] <- any(is.na(temp.data))
}
}
#Select the Pat.ID
#Put all together
Sample.ID <- c()
NonProgressor.selected <- array(NA, dim = c(1, dim(Progressor)[2]))
NonProgressor.Patient.ID <- c()
for(Pat.ID in 1 : 105){
temp.flag <- which(NonProgressor.Flag[Pat.ID, ] == FALSE)
if(length(temp.flag) > 0){
NonProgressor.selected <- rbind(NonProgressor.selected, NonProgressor[Pat.ID, temp.flag, ])
Sample.ID <- c(Sample.ID, paste0('NonP_', Pat.ID, '_', temp.flag))
NonProgressor.Patient.ID <- c(NonProgressor.Patient.ID, replicate(length(temp.flag), NonProgressor.Pat.IDs[Pat.ID]))
}
}
meta_colors <- list(
"group" = c(
"progressor" = "#AD07E3",
"non-progressor" = "#238b45"
),
"group1" = c(
"progressor" = "#AD07E3",
"non-progressor" = "#238b45"
)
)
set.seed(1986)
library(RColorBrewer)
library(viridis)
quantile_breaks <- function(xs, n = 10) {
breaks <- quantile(xs, probs = seq(0, 1, length.out = n))
breaks[!duplicated(breaks)]
}
folder <- "."
Progressor <- readRDS(file.path(paste0(folder, "/Progressor_allmonths_New"), "Progressor_allmonths.RDS"))
Progressor.Patient.ID.wGroup <- readRDS(file.path(paste0(folder, "/Progressor_allmonths_New"), "Progressor_PatientID.RDS"))
NonProgressor <- readRDS(file.path(paste0(folder, "/NonProgressors_New"), "NonProgressor.RDS"))
NonProgressor.Pat.IDs <- readRDS(file.path(paste0(folder, "/NonProgressors_New"), "NonProgressor.Patient.IDs.RDS"))
Syssero.Name <- readRDS(file.path(paste0(folder, "/NonProgressors_New"), "SystemSerogy.RDS"))
#
#Risk6 <- Syssero.Name[length(Syssero.Name)]
eliminating.antigen <- c('Ebola', 'HA', 'CMV', 'CMV_gB', 'CMV_pentamer', 'EBV')
Ebola.related <- grep('Ebola', Syssero.Name, value=TRUE)
HA.related <- grep('HA', Syssero.Name, value=TRUE)
CMV.related <- grep('CMV', Syssero.Name, value= TRUE)
EBV.related <- grep('EBV', Syssero.Name, value = TRUE)
AD.related <- grep('AD', Syssero.Name, value = TRUE)
excluded.features <- c(Ebola.related, HA.related, CMV.related, EBV.related, AD.related) #, Risk6)
feature.index <- which(Syssero.Name %in% excluded.features)
#
Syssero.Name <- setdiff(Syssero.Name, excluded.features)
#
Progressor <- Progressor[, -feature.index]
NonProgressor <- NonProgressor[, , -feature.index]
## Provide the dir name(i.e sub dir) that you want to create under main dir:
output_dir <- 'Progressor_allmonths'
if (!dir.exists(output_dir)){
dir.create(output_dir)
}
NonProgressor.Flag <- array(NA, dim = c(105, 5))
for(Pat.ID in 1 : 105){
for(Day.ID in 1 : 5){
temp.data <- NonProgressor[Pat.ID, Day.ID, ]
NonProgressor.Flag[Pat.ID, Day.ID] <- any(is.na(temp.data))
}
}
#Select the Pat.ID
#Put all together
Sample.ID <- c()
NonProgressor.selected <- array(NA, dim = c(1, dim(Progressor)[2]))
NonProgressor.Patient.ID <- c()
for(Pat.ID in 1 : 105){
temp.flag <- which(NonProgressor.Flag[Pat.ID, ] == FALSE)
if(length(temp.flag) > 0){
NonProgressor.selected <- rbind(NonProgressor.selected, NonProgressor[Pat.ID, temp.flag, ])
Sample.ID <- c(Sample.ID, paste0('NonP_', Pat.ID, '_', temp.flag))
NonProgressor.Patient.ID <- c(NonProgressor.Patient.ID, replicate(length(temp.flag), NonProgressor.Pat.IDs[Pat.ID, ]$progressors..Sample.ID.))
}
}
NonProgressor.selected <- NonProgressor.selected[-1, ]
rownames(NonProgressor.selected) <- Sample.ID
colnames(NonProgressor.selected) <- Syssero.Name
temp.index <- which(apply(NonProgressor.selected, 1, function(x) all(is.na(x))))
if(length(temp.index) > 0){
NonProgressor.selected <- NonProgressor.selected[-temp.index, ]
}
meta_colors <- list(
"group" = c(
"progressor" = "#AD07E3",
"non-progressor" = "#238b45"
),
"group1" = c(
"progressor" = "#AD07E3",
"non-progressor" = "#238b45"
)
)
set.seed(1986)
library(RColorBrewer)
library(viridis)
quantile_breaks <- function(xs, n = 10) {
breaks <- quantile(xs, probs = seq(0, 1, length.out = n))
breaks[!duplicated(breaks)]
}
folder <- "."
Progressor <- readRDS(file.path(paste0(folder, "/Progressor_allmonths_New"), "Progressor_allmonths.RDS"))
Progressor.Patient.ID.wGroup <- readRDS(file.path(paste0(folder, "/Progressor_allmonths_New"), "Progressor_PatientID.RDS"))
NonProgressor <- readRDS(file.path(paste0(folder, "/NonProgressors_New"), "NonProgressor.RDS"))
NonProgressor.Pat.IDs <- readRDS(file.path(paste0(folder, "/NonProgressors_New"), "NonProgressor.Patient.IDs.RDS"))
Syssero.Name <- readRDS(file.path(paste0(folder, "/NonProgressors_New"), "SystemSerogy.RDS"))
#
#Risk6 <- Syssero.Name[length(Syssero.Name)]
eliminating.antigen <- c('Ebola', 'HA', 'CMV', 'CMV_gB', 'CMV_pentamer', 'EBV')
Ebola.related <- grep('Ebola', Syssero.Name, value=TRUE)
HA.related <- grep('HA', Syssero.Name, value=TRUE)
CMV.related <- grep('CMV', Syssero.Name, value= TRUE)
EBV.related <- grep('EBV', Syssero.Name, value = TRUE)
AD.related <- grep('AD', Syssero.Name, value = TRUE)
excluded.features <- c(Ebola.related, HA.related, CMV.related, EBV.related, AD.related) #, Risk6)
feature.index <- which(Syssero.Name %in% excluded.features)
#
Syssero.Name <- setdiff(Syssero.Name, excluded.features)
#
Progressor <- Progressor[, -feature.index]
NonProgressor <- NonProgressor[, , -feature.index]
## Provide the dir name(i.e sub dir) that you want to create under main dir:
output_dir <- 'Progressor_allmonths'
if (!dir.exists(output_dir)){
dir.create(output_dir)
}
NonProgressor.Flag <- array(NA, dim = c(105, 5))
for(Pat.ID in 1 : 105){
for(Day.ID in 1 : 5){
temp.data <- NonProgressor[Pat.ID, Day.ID, ]
NonProgressor.Flag[Pat.ID, Day.ID] <- any(is.na(temp.data))
}
}
#Select the Pat.ID
#Put all together
Sample.ID <- c()
NonProgressor.selected <- array(NA, dim = c(1, dim(Progressor)[2]))
NonProgressor.Patient.ID <- c()
for(Pat.ID in 1 : 105){
temp.flag <- which(NonProgressor.Flag[Pat.ID, ] == FALSE)
if(length(temp.flag) > 0){
NonProgressor.selected <- rbind(NonProgressor.selected, NonProgressor[Pat.ID, temp.flag, ])
Sample.ID <- c(Sample.ID, paste0('NonP_', Pat.ID, '_', temp.flag))
NonProgressor.Patient.ID <- c(NonProgressor.Patient.ID, replicate(length(temp.flag), NonProgressor.Pat.IDs[Pat.ID, ]$progressors..Sample.ID.))
}
}
NonProgressor.selected <- NonProgressor.selected[-1, ]
rownames(NonProgressor.selected) <- Sample.ID
colnames(NonProgressor.selected) <- Syssero.Name
temp.index <- which(apply(NonProgressor.selected, 1, function(x) all(is.na(x))))
if(length(temp.index) > 0){
NonProgressor.selected <- NonProgressor.selected[-temp.index, ]
}
all(colnames(NonProgressor.selected) == colnames(Progressor))
Data_combining <- rbind(Progressor, NonProgressor.selected)
Data_group <- c(rep("progressor", dim(Progressor)[1]), rep("non-progressor", dim(NonProgressor.selected)[1]))
Pat.ID <- c(Progressor.Patient.ID.wGroup, NonProgressor.Patient.ID)
meta_colors <- list(
"group" = c(
"progressor" = "#AD07E3",
"non-progressor" = "#238b45"
),
"group1" = c(
"progressor" = "#AD07E3",
"non-progressor" = "#238b45"
)
)
set.seed(1986)
library(RColorBrewer)
library(viridis)
quantile_breaks <- function(xs, n = 10) {
breaks <- quantile(xs, probs = seq(0, 1, length.out = n))
breaks[!duplicated(breaks)]
}
folder <- "."
Progressor <- readRDS(file.path(paste0(folder, "/Progressor_allmonths_New"), "Progressor_allmonths.RDS"))
Progressor.Patient.ID.wGroup <- readRDS(file.path(paste0(folder, "/Progressor_allmonths_New"), "Progressor_PatientID.RDS"))
NonProgressor <- readRDS(file.path(paste0(folder, "/NonProgressors_New"), "NonProgressor.RDS"))
NonProgressor.Pat.IDs <- readRDS(file.path(paste0(folder, "/NonProgressors_New"), "NonProgressor.Patient.IDs.RDS"))
Syssero.Name <- readRDS(file.path(paste0(folder, "/NonProgressors_New"), "SystemSerogy.RDS"))
#
#Risk6 <- Syssero.Name[length(Syssero.Name)]
eliminating.antigen <- c('Ebola', 'HA', 'CMV', 'CMV_gB', 'CMV_pentamer', 'EBV')
Ebola.related <- grep('Ebola', Syssero.Name, value=TRUE)
HA.related <- grep('HA', Syssero.Name, value=TRUE)
CMV.related <- grep('CMV', Syssero.Name, value= TRUE)
EBV.related <- grep('EBV', Syssero.Name, value = TRUE)
AD.related <- grep('AD', Syssero.Name, value = TRUE)
excluded.features <- c(Ebola.related, HA.related, CMV.related, EBV.related, AD.related) #, Risk6)
feature.index <- which(Syssero.Name %in% excluded.features)
#
Syssero.Name <- setdiff(Syssero.Name, excluded.features)
#
Progressor <- Progressor[, -feature.index]
NonProgressor <- NonProgressor[, , -feature.index]
## Provide the dir name(i.e sub dir) that you want to create under main dir:
output_dir <- 'Progressor_allmonths'
if (!dir.exists(output_dir)){
dir.create(output_dir)
}
NonProgressor.Flag <- array(NA, dim = c(105, 5))
for(Pat.ID in 1 : 105){
for(Day.ID in 1 : 5){
temp.data <- NonProgressor[Pat.ID, Day.ID, ]
NonProgressor.Flag[Pat.ID, Day.ID] <- any(is.na(temp.data))
}
}
#Select the Pat.ID
#Put all together
Sample.ID <- c()
NonProgressor.selected <- array(NA, dim = c(1, dim(Progressor)[2]))
NonProgressor.Patient.ID <- c()
for(Pat.ID in 1 : 105){
temp.flag <- which(NonProgressor.Flag[Pat.ID, ] == FALSE)
if(length(temp.flag) > 0){
NonProgressor.selected <- rbind(NonProgressor.selected, NonProgressor[Pat.ID, temp.flag, ])
Sample.ID <- c(Sample.ID, paste0('NonP_', Pat.ID, '_', temp.flag))
NonProgressor.Patient.ID <- c(NonProgressor.Patient.ID, replicate(length(temp.flag), NonProgressor.Pat.IDs[Pat.ID, ]$progressors..Sample.ID.))
}
}
NonProgressor.selected <- NonProgressor.selected[-1, ]
rownames(NonProgressor.selected) <- Sample.ID
colnames(NonProgressor.selected) <- Syssero.Name
temp.index <- which(apply(NonProgressor.selected, 1, function(x) all(is.na(x))))
if(length(temp.index) > 0){
NonProgressor.selected <- NonProgressor.selected[-temp.index, ]
}
all(colnames(NonProgressor.selected) == colnames(Progressor))
Data_combining <- rbind(Progressor, NonProgressor.selected)
Data_group <- c(rep("progressor", dim(Progressor)[1]), rep("non-progressor", dim(NonProgressor.selected)[1]))
Pat.ID <- c(Progressor.Patient.ID.wGroup, NonProgressor.Patient.ID)
temp.index <- which(apply(Data_combining, 1, function(x) any(is.na(x))))
if(length(temp.index) > 0){
Data_group <- Data_group[-temp.index]
Data_combining <- Data_combining[-temp.index, ]
Pat.ID <- Pat.ID[-temp.index]
}
feature.names <- colnames(Data_combining)
feature.names <- gsub("/", ".", feature.names)
colnames(Data_combining) <- feature.names
saveRDS(Data_group, file.path(output_dir, "Data_group.RDS"))
saveRDS(Data_combining, file.path(output_dir, "Data_combining.RDS"))
saveRDS(Pat.ID, file.path(output_dir, "Pat.ID.RDS"))
write.csv(Data_group, file.path(output_dir, "Data_group.csv"))
write.csv(Data_combining, file.path(output_dir, "Data_combining.csv"))
write.csv(Pat.ID, file.path(output_dir, "Pat.ID.csv"))
library(pheatmap)
annotation_row <- data.frame(group1 = Data_group, group = Data_group)
rownames(annotation_row) <- rownames(Data_combining)
ordered_index <- order(annotation_row$group, annotation_row$group1)
annotation_row_ordered <- annotation_row[ordered_index, ]
data.sero.ordered <- scale(Data_combining[ordered_index, ], center = TRUE, scale = TRUE)
mat_breaks <- quantile_breaks(na.omit(unlist(data.sero.ordered)), n = 100)
png(file.path(output_dir, "heatmap.scaled.png"), width=3560, height=1940, res = 300)
pheatmap(
mat = data.sero.ordered,
border_color = NA,
color = colorRampPalette(rev(brewer.pal(n = 8, name = "RdYlBu")))(length(mat_breaks) - 1),
#color = inferno(length(mat_breaks) - 1),
breaks = mat_breaks,
show_rownames = FALSE,
show_colnames = TRUE,
cluster_rows = FALSE,
cluster_cols = TRUE,
annotation_row = annotation_row_ordered,
annotation_colors = meta_colors,
fontsize = 6,
fontsize_col = 5,
fontsize_row = 5,
scale = "none",
main  = "Serology Data with Quantile Color Scale"
)
dev.off()
library("readxl")
folder.directory <- '../../0_Frozen_Dataset/reslidesfromprogressors'
filename <- 'ProgAb_demo.csv'
# csv files
meta.progressors <- read.csv(file.path(folder.directory, filename))
index <- which(meta.progressors$timeToTB == 999)
meta.progressors[index, 10] <- NA
meta.progressors$VisitType <- as.character(meta.progressors$VisitType)
index <- which(meta.progressors$VisitType == "D0")
meta.progressors[index, 4] <- "D000"
View(meta.progressors)
Sex <- c()
for(index in 1 : length(Pat.ID)){
temp.index <- which(Pat.ID[index] == meta.progressors$SubjectID)
if(length(temp.index) > 0){
Sex <- c(Sex, meta.progressors[temp.index[1], ]$Sex)
}else{
Sex <- c(Sex, NA)
}
}
Sex
Pat.ID
Sex <- c()
for(index in 1 : length(Pat.ID)){
temp.index <- which(Pat.ID[index] == as.character(meta.progressors$SubjectID))
if(length(temp.index) > 0){
Sex <- c(Sex, meta.progressors[temp.index[1], ]$Sex)
}else{
Sex <- c(Sex, NA)
}
}
Sex
index <- 1
Pat.ID[index]
as.character(meta.progressors$SubjectID)
Pat.ID
Sex <- c()
for(index in 1 : length(Pat.ID)){
temp.index <- which(as.numeric(Pat.ID[index]) == meta.progressors$SubjectID)
if(length(temp.index) > 0){
Sex <- c(Sex, meta.progressors[temp.index[1], ]$Sex)
}else{
Sex <- c(Sex, NA)
}
}
Sex
Sex <- c()
for(index in 1 : length(Pat.ID)){
temp.index <- which(as.numeric(Pat.ID[index]) == meta.progressors$SubjectID)
if(length(temp.index) > 0){
Sex <- c(Sex, meta.progressors[temp.index[1], ]$Sex)
}else{
Sex <- c(Sex, NA)
print("No Data")
}
}
Sex <- c()
for(index in 1 : length(Pat.ID)){
temp.index <- which(as.numeric(Pat.ID[index]) == meta.progressors$SubjectID)
if(length(temp.index) > 0){
Sex <- c(Sex, meta.progressors[temp.index[1], ]$Sex)
}else{
Sex <- c(Sex, NA)
print("No Data")
}
}
write.csv(Sex, file.path(output_dir, "Sex.csv"))
#Create a folder to save the results.
results.folder <- '../../2_Experiments_02-23-2021_recap/02-23-2021-Data_Exploring/results'
#Data.matrix = array(NA, dim = c(length(Patient.ID), length(VisitType), length(SystemSerogy)))
Data.matrix <- readRDS(file.path(results.folder, 'Data.matrix.RDS'))
Patient.ID.wGroup <- readRDS(file.path(results.folder, 'Patient.ID.wGroup.RDS'))
Patient.ID.wGroup$progressors..Sample.ID. <- gsub("/", "", Patient.ID.wGroup$progressors..Sample.ID.)
VisitType <- readRDS(file.path(results.folder, 'VisitType.RDS'))
SystemSerogy <- readRDS(file.path(results.folder, 'SystemSerogy.RDS'))
TimetoTB <- readRDS(file.path(results.folder, 'TimetoTB.RDS'))
TimetoTB$progressors..Sample.ID. <- gsub("/", "", TimetoTB$progressors..Sample.ID.)
#Create a folder to save the results.
results.folder <- '../../2_Experiments_02-23-2021_recap/02-23-2021-Data_Exploring/results'
#Data.matrix = array(NA, dim = c(length(Patient.ID), length(VisitType), length(SystemSerogy)))
Data.matrix <- readRDS(file.path(results.folder, 'Data.matrix.RDS'))
Patient.ID.wGroup <- readRDS(file.path(results.folder, 'Patient.ID.wGroup.RDS'))
Patient.ID.wGroup$progressors..Sample.ID. <- gsub("/", "", Patient.ID.wGroup$progressors..Sample.ID.)
VisitType <- readRDS(file.path(results.folder, 'VisitType.RDS'))
SystemSerogy <- readRDS(file.path(results.folder, 'SystemSerogy.RDS'))
TimetoTB <- readRDS(file.path(results.folder, 'TimetoTB.RDS'))
TimetoTB$progressors..Sample.ID. <- gsub("/", "", TimetoTB$progressors..Sample.ID.)
