alpha = options$alpha,
stroke = options$stroke,
shape = options$shape,
show.legend = TRUE) +
scale_fill_manual(values = meta_colors$group, name = "group") +
labs(x = "seroScore",y = "Risk6") +
theme_classic(base_size = 8) +
theme( legend.text = element_text(face = "bold", color = "black"),
axis.title = element_text(face = "bold", color = "black"),
axis.text = element_text(face = "bold", color = "black")) +
theme(legend.position = "none",
aspect.ratio = 1)#,
#axis.text = ggplot2::element_text(color = "black"))
filename <- 'Sero_0_9M_group.pdf'
ggsave(file = file.path(saved.dir, filename), width = 3, height = 3, dpi = 300)
filename <- 'Sero_0_9M_group.png'
ggsave(file = file.path(saved.dir, filename), width = 3, height = 3, dpi = 300)
library(RColorBrewer)
library(viridis)
quantile_breaks <- function(xs, n = 10) {
breaks <- quantile(xs, probs = seq(0, 1, length.out = n))
breaks[!duplicated(breaks)]
}
options <- list(alpha = 1,
size = 1.5,
stroke = 0.5,
shape = 21
)
meta_colors <- list(
"group" = c(
"progressor" = "#AD07E3",
"non-progressor" = "#238b45"
),
"group1" = c(
"progressor" = "#AD07E3",
"non-progressor" = "#238b45"
)
)
#Load the meanAUC
folder <- "../12-14-2022-Diff_Pro_vs_nonPro_9_18M_risk5score_FcR_woFunctional"
data <- read.csv(file.path(folder, "mean_AUC_SeroScore_FcR.csv"))
#Get the index with max meanAUC
index <- which.max(as.numeric(data))
sel.data <- data[index]
#Load the seroScore
folder <- "../12-14-2022-Diff_Pro_vs_nonPro_9_18M_risk5score_FcR_woFunctional/SeroScore_FcR_Lasso"
seroScore <- readRDS(file.path(folder, 'SeroScore.RDS'))
seroScore.interested <- seroScore[, index]
#Load the datatype.
#Data a folder to save the results.
output_dir <- "../12-14-2022-Diff_Pro_vs_nonPro_9_18M_risk5score_FcR_woFunctional/Progressor_9_18months"
Data_group <- readRDS(file.path(output_dir, "Data_group.RDS"))
Data_group <- factor(Data_group, levels = c("non-progressor", "progressor"))
Data_combining <- readRDS(file.path(output_dir, "Data_combining.RDS"))
DataScore <- data.frame(seroScore = seroScore.interested, Risk6 = Data_combining[, 'Risk6'], FCR3B_PPD = Data_combining[, 'FcgR3B_PPD'], group = Data_group)
#Create a folder to save the results.
saved.dir <- './mean_SeroScore_substract_zscore'
if (!dir.exists(saved.dir)){
dir.create((saved.dir))
}
library(ggplot2)
library(ggrepel)
ggplot(data = DataScore[sample(nrow(DataScore)),]) +
geom_point(
mapping = aes_string(x = "seroScore", y = "Risk6", fill = "group"),
color = "black",
size = options$size,
alpha = options$alpha,
stroke = options$stroke,
shape = options$shape,
show.legend = TRUE) +
scale_fill_manual(values = meta_colors$group, name = "group") +
labs(x = "seroScore",y = "Risk6") +
theme_classic(base_size = 8) +
theme( legend.text = element_text(face = "bold", color = "black"),
axis.title = element_text(face = "bold", color = "black"),
axis.text = element_text(face = "bold", color = "black")) +
theme(legend.position = "none",
aspect.ratio = 1)#,
#axis.text = ggplot2::element_text(color = "black"))
filename <- 'Sero_9_18M_group.pdf'
ggsave(file = file.path(saved.dir, filename), width = 3, height = 3, dpi = 300)
filename <- 'Sero_9_18M_group.png'
ggsave(file = file.path(saved.dir, filename), width = 3, height = 3, dpi = 300)
library(RColorBrewer)
library(viridis)
quantile_breaks <- function(xs, n = 10) {
breaks <- quantile(xs, probs = seq(0, 1, length.out = n))
breaks[!duplicated(breaks)]
}
library(assertr)
Post.index <- 4095
#Positive
l <- rep(list(0:1), 12)
Post.index <- expand.grid(l)
Post.index <- Post.index[-1, ]
#Post.index <- Post.index[c(162, 97, 227), ]
Post.index <- col_concat(Post.index, sep = "")
## Provide the dir name(i.e sub dir) that you want to create under main dir:
saved.dir <- 'mean_SeroScore_substract_zscore'
if (!dir.exists(saved.dir)){
dir.create(saved.dir)
}
library(pheatmap)
library(reshape2)
library(ggplot2)
folder <- "../12-14-2022-Diff_Pro_vs_nonPro_9_18M_risk5score_FcR_woFunctional"
data <- read.csv(file.path(folder, "mean_AUC_SeroScore_FcR.csv"))
write.csv(data, file.path('.', 'mean_AUC_SeroScore_FcR.csv'))
colnames(data) <- Post.index
data <- melt(data)
png(file.path(saved.dir, "SeroScore_seg_v2.png"), width=4500, height=1500, res = 300)
ggplot(data, aes(x = variable, y = value)) +
geom_point(stat='identity') +
theme_classic() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
dev.off()
#Get the index with max meanAUC
index <- which.max(as.numeric(data$value))
sel.data <- data[index, ]
library(RColorBrewer)
library(viridis)
quantile_breaks <- function(xs, n = 10) {
breaks <- quantile(xs, probs = seq(0, 1, length.out = n))
breaks[!duplicated(breaks)]
}
options <- list(alpha = 1,
size = 1.5,
stroke = 0.5,
shape = 21
)
meta_colors <- list(
"group" = c(
"progressor" = "#AD07E3",
"non-progressor" = "#238b45"
),
"group1" = c(
"progressor" = "#AD07E3",
"non-progressor" = "#238b45"
)
)
#Load the meanAUC
folder <- "../12-14-2022-Diff_Pro_vs_nonPro_9_18M_risk5score_FcR_woFunctional"
data <- read.csv(file.path(folder, "mean_AUC_SeroScore_FcR.csv"))
#Get the index with max meanAUC
index <- which.max(as.numeric(data))
sel.data <- data[index]
#Load the seroScore
folder <- "../12-14-2022-Diff_Pro_vs_nonPro_9_18M_risk5score_FcR_woFunctional/SeroScore_FcR_Lasso"
seroScore <- readRDS(file.path(folder, 'SeroScore.RDS'))
seroScore.interested <- seroScore[, index]
#Load the datatype.
#Data a folder to save the results.
output_dir <- "../12-14-2022-Diff_Pro_vs_nonPro_9_18M_risk5score_FcR_woFunctional/Progressor_9_18months"
Data_group <- readRDS(file.path(output_dir, "Data_group.RDS"))
Data_group <- factor(Data_group, levels = c("non-progressor", "progressor"))
Data_combining <- readRDS(file.path(output_dir, "Data_combining.RDS"))
DataScore <- data.frame(seroScore = seroScore.interested, Risk6 = Data_combining[, 'Risk6'], FCR3B_PPD = Data_combining[, 'FcgR3B_PPD'], group = Data_group)
#Create a folder to save the results.
saved.dir <- './mean_SeroScore_substract_zscore'
if (!dir.exists(saved.dir)){
dir.create((saved.dir))
}
library(ggplot2)
library(ggrepel)
ggplot(data = DataScore[sample(nrow(DataScore)),]) +
geom_point(
mapping = aes_string(x = "seroScore", y = "Risk6", fill = "group"),
color = "black",
size = options$size,
alpha = options$alpha,
stroke = options$stroke,
shape = options$shape,
show.legend = TRUE) +
scale_fill_manual(values = meta_colors$group, name = "group") +
labs(x = "seroScore",y = "Risk6") +
theme_classic(base_size = 8) +
theme( legend.text = element_text(face = "bold", color = "black"),
axis.title = element_text(face = "bold", color = "black"),
axis.text = element_text(face = "bold", color = "black")) +
theme(legend.position = "none",
aspect.ratio = 1)#,
#axis.text = ggplot2::element_text(color = "black"))
filename <- 'Sero_9_18M_group.pdf'
ggsave(file = file.path(saved.dir, filename), width = 3, height = 3, dpi = 300)
filename <- 'Sero_9_18M_group.png'
ggsave(file = file.path(saved.dir, filename), width = 3, height = 3, dpi = 300)
library(RColorBrewer)
library(viridis)
quantile_breaks <- function(xs, n = 10) {
breaks <- quantile(xs, probs = seq(0, 1, length.out = n))
breaks[!duplicated(breaks)]
}
options <- list(alpha = 1,
size = 1.5,
stroke = 0.5,
shape = 21
)
meta_colors <- list(
"group" = c(
"progressor" = "#AD07E3",
"non-progressor" = "#238b45"
),
"group1" = c(
"progressor" = "#AD07E3",
"non-progressor" = "#238b45"
)
)
#Load the meanAUC
folder <- "../12-11-2022-Diff_Pro_vs_nonPro_threeInterval_risk5score_FcR"
data <- read.csv(file.path(folder, "mean_AUC_SeroScore_FcR.csv"))
#Get the index with max meanAUC
index <- which.max(as.numeric(data))
sel.data <- data[index]
#Load the seroScore
folder <- "../12-11-2022-Diff_Pro_vs_nonPro_threeInterval_risk5score_FcR/SeroScore_FcR_Lasso"
seroScore <- readRDS(file.path(folder, 'SeroScore.RDS'))
seroScore.interested <- seroScore[, index]
#Load the datatype.
#Data a folder to save the results.
output_dir <- "../12-11-2022-Diff_Pro_vs_nonPro_threeInterval_risk5score_FcR/Progressor_allmonths"
Data_group <- readRDS(file.path(output_dir, "Data_group.RDS"))
Data_group <- factor(Data_group, levels = c("non-progressor", "progressor"))
Data_combining <- readRDS(file.path(output_dir, "Data_combining.RDS"))
DataScore <- data.frame(seroScore = seroScore.interested, Risk6 = Data_combining[, 'Risk6'], FCR3B_PPD = Data_combining[, 'FcgR3B_PPD'], group = Data_group)
#Create a folder to save the results.
saved.dir <- './mean_SeroScore_substract_zscore'
if (!dir.exists(saved.dir)){
dir.create((saved.dir))
}
library(ggplot2)
library(ggrepel)
ggplot(data = DataScore[sample(nrow(DataScore)),]) +
geom_point(
mapping = aes_string(x = "seroScore", y = "Risk6", fill = "group"),
color = "black",
size = options$size,
alpha = options$alpha,
stroke = options$stroke,
shape = options$shape,
show.legend = TRUE) +
scale_fill_manual(values = meta_colors$group, name = "group") +
labs(x = "seroScore",y = "Risk6") +
theme_classic(base_size = 8) +
theme( legend.text = element_text(face = "bold", color = "black"),
axis.title = element_text(face = "bold", color = "black"),
axis.text = element_text(face = "bold", color = "black")) +
theme(legend.position = "none",
aspect.ratio = 1)#,
#axis.text = ggplot2::element_text(color = "black"))
filename <- 'Sero_9_18M_group.pdf'
ggsave(file = file.path(saved.dir, filename), width = 3, height = 3, dpi = 300)
filename <- 'Sero_9_18M_group.png'
ggsave(file = file.path(saved.dir, filename), width = 3, height = 3, dpi = 300)
png(file.path(saved.dir, "SeroScore_seg_v2.png"), width=4500, height=1500, res = 300)
ggplot(data, aes(x = variable, y = value)) +
geom_point(stat='identity') +
theme_classic() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
View(data)
colnames(data)
library(assertr)
Post.index <- 524287
#Positive
l <- rep(list(0:1), 19)
Post.index <- expand.grid(l)
Post.index <- Post.index[-1, ]
#Post.index <- Post.index[c(162, 97, 227), ]
Post.index <- col_concat(Post.index, sep = "")
colnames(data) <- Post.index
data <- melt(data)
library(pheatmap)
library(reshape2)
library(ggplot2)
data <- melt(data)
png(file.path(saved.dir, "SeroScore_seg_v2.png"), width=8500, height=1500, res = 300)
ggplot(data, aes(x = variable, y = value)) +
geom_point(stat='identity') +
theme_classic() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
dev.off()
library(RColorBrewer)
library(viridis)
quantile_breaks <- function(xs, n = 10) {
breaks <- quantile(xs, probs = seq(0, 1, length.out = n))
breaks[!duplicated(breaks)]
}
options <- list(alpha = 1,
size = 2.5,
stroke = 0.5,
shape = 21
)
meta_colors <- list(
"group" = c(
"progressor" = "#AD07E3",
"non-progressor" = "#238b45"
),
"group1" = c(
"progressor" = "#AD07E3",
"non-progressor" = "#238b45"
)
)
meta_colors <- list(
"group" = c(
"progressor" = "#fe9300",
"non-progressor" = "#009093"
),
"group1" = c(
"progressor" = "#fe9300",
"non-progressor" = "#009093"
)
)
#Load the meanAUC
folder <- "../12-11-2022-Diff_Pro_vs_nonPro_threeInterval_risk5score_FcR"
data <- read.csv(file.path(folder, "mean_AUC_SeroScore_FcR.csv"))
#Get the index with max meanAUC
index <- which.max(as.numeric(data))
sel.data <- data[index]
#Load the seroScore
folder <- "../12-11-2022-Diff_Pro_vs_nonPro_threeInterval_risk5score_FcR/SeroScore_FcR_Lasso"
seroScore <- readRDS(file.path(folder, 'SeroScore.RDS'))
seroScore.interested <- seroScore[, index]
#Load the datatype.
#Data a folder to save the results.
output_dir <- "../12-11-2022-Diff_Pro_vs_nonPro_threeInterval_risk5score_FcR/Progressor_allmonths"
Data_group <- readRDS(file.path(output_dir, "Data_group.RDS"))
Data_group <- factor(Data_group, levels = c("non-progressor", "progressor"))
Data_combining <- readRDS(file.path(output_dir, "Data_combining.RDS"))
DataScore <- data.frame(seroScore = seroScore.interested, Risk6 = Data_combining[, 'Risk6'], FCR3B_PPD = Data_combining[, 'FcgR3B_PPD'], group = Data_group)
#Create a folder to save the results.
saved.dir <- './mean_SeroScore_substract_zscore_v2'
if (!dir.exists(saved.dir)){
dir.create((saved.dir))
}
library(ggplot2)
library(ggrepel)
ggplot(data = DataScore[sample(nrow(DataScore)),]) +
geom_point(
mapping = aes_string(x = "seroScore", y = "Risk6", fill = "group"),
color = "black",
size = options$size,
alpha = options$alpha,
stroke = options$stroke,
shape = options$shape,
show.legend = TRUE) +
scale_fill_manual(values = meta_colors$group, name = "group") +
labs(x = "seroScore",y = "Risk6") +
theme_classic(base_size = 8) +
theme( legend.text = element_text(face = "bold", color = "black"),
axis.title = element_text(face = "bold", color = "black"),
axis.text = element_text(face = "bold", color = "black")) +
theme(legend.position = "none",
aspect.ratio = 1)#,
#axis.text = ggplot2::element_text(color = "black"))
filename <- 'Sero_9_18M_group.pdf'
ggsave(file = file.path(saved.dir, filename), width = 3, height = 3, dpi = 300)
filename <- 'Sero_9_18M_group.png'
ggsave(file = file.path(saved.dir, filename), width = 3, height = 3, dpi = 300)
#Load the meanAUC
folder <- "../12-11-2022-Diff_Pro_vs_nonPro_threeInterval_risk5score_FcR"
data <- read.csv(file.path(folder, "mean_AUC_SeroScore_FcR.csv"))
library(pheatmap)
Features <- c("IgG1_LAM", "IgG2_PPD", "IgG2_ESAT6", "IgA1_PPD", "IgA2_PPD", "IgM_PPD", "FcgR3B_PPD")
Combined.Features <- c(Features, "'Risk6'")
#Create a folder to save the results.
saved.dir <- './mean_SeroScore_substract_zscore_v2'
Combined.Dataset <- readRDS(file.path(saved.dir, "Combined.Dataset.RDS"))
DataScore <- readRDS(file.path(saved.dir, "DataScore.RDS"))
View(Combined.Dataset)
#Visualizing the heatmap
library(pheatmap)
ordered_index <- order(DataScore$seroScore, DataScore$Risk6, DataScore$group)
annotation_row_ordered <- DataScore[ordered_index, c("seroScore", "Risk6", "group")]
rownames(Combined.Dataset) <- rownames(DataScore)
mat_breaks <- quantile_breaks(na.omit(unlist(scale(Combined.Dataset[, 1:7]))), n = 100)
library(RColorBrewer)
library(viridis)
quantile_breaks <- function(xs, n = 10) {
breaks <- quantile(xs, probs = seq(0, 1, length.out = n))
breaks[!duplicated(breaks)]
}
options <- list(alpha = 1,
size = 2.5,
stroke = 0.5,
shape = 21
)
meta_colors <- list(
"group" = c(
"progressor" = "#AD07E3",
"non-progressor" = "#238b45"
),
"group1" = c(
"progressor" = "#AD07E3",
"non-progressor" = "#238b45"
)
)
meta_colors <- list(
"group" = c(
"progressor" = "#fe9300",
"non-progressor" = "#009093"
),
"group1" = c(
"progressor" = "#fe9300",
"non-progressor" = "#009093"
)
)
#Visualizing the heatmap
library(pheatmap)
ordered_index <- order(DataScore$seroScore, DataScore$Risk6, DataScore$group)
annotation_row_ordered <- DataScore[ordered_index, c("seroScore", "Risk6", "group")]
rownames(Combined.Dataset) <- rownames(DataScore)
mat_breaks <- quantile_breaks(na.omit(unlist(scale(Combined.Dataset[, 1:7]))), n = 100)
png(file.path(saved.dir, "selected.features_v2.png"), width=1000, height=1500, res = 300)
pheatmap(
mat = scale(Combined.Dataset[ordered_index, 1:7]),
color = colorRampPalette(rev(brewer.pal(n = 8, name = "RdBu")))(length(mat_breaks) - 1),
breaks = mat_breaks,
border_color = NA,
#color = colorRampPalette(rev(brewer.pal(n = 8, name = \RdYlBu\)))(6),
show_rownames = FALSE,
show_colnames = TRUE,
cluster_rows = FALSE,
cluster_cols = TRUE,
annotation_row = annotation_row_ordered,
annotation_colors = meta_colors,
fontsize = 5,
fontsize_col = 6,
scale = "none"
)
dev.off()
#Visualizing the heatmap
library(pheatmap)
ordered_index <- order(DataScore$seroScore, DataScore$Risk6, DataScore$group)
annotation_row_ordered <- DataScore[ordered_index, c("seroScore", "Risk6", "group")]
rownames(Combined.Dataset) <- rownames(DataScore)
mat_breaks <- quantile_breaks(na.omit(unlist(scale(Combined.Dataset[, 1:7]))), n = 100)
png(file.path(saved.dir, "selected.features_scaled_v2.png"), width=1000, height=1500, res = 300)
pheatmap(
mat = scale(Combined.Dataset[ordered_index, 1:7]),
color = colorRampPalette(rev(brewer.pal(n = 8, name = "RdBu")))(length(mat_breaks) - 1),
breaks = mat_breaks,
border_color = NA,
#color = colorRampPalette(rev(brewer.pal(n = 8, name = \RdYlBu\)))(6),
show_rownames = FALSE,
show_colnames = TRUE,
cluster_rows = FALSE,
cluster_cols = TRUE,
annotation_row = annotation_row_ordered,
annotation_colors = meta_colors,
fontsize = 5,
fontsize_col = 6,
scale = "none"
)
dev.off()
library(ggplot2)
library(reshape2)
Interested.Features <- scale(Combined.Dataset[, 1:7])
Interested.Features.df <- melt(Interested.Features)
colnames(Interested.Features.df) <- c("SampleID", "Features", "Value")
Features <- c("IgA1_PPD", "IgG2_PPD", "IgG2_ESAT6", "IgA2_PPD", "IgM_PPD", "IgG1_LAM", "FcgR3B_PPD")
Interested.Features.df$Features <- factor(Interested.Features.df$Features, levels = Features)
ggplot(Interested.Features.df, aes(x=Features, y=Value, fill = Features)) +
geom_boxplot(outlier.shape = NA, fill="gray") +
scale_fill_brewer(palette="Blues") +
labs(x = "Features",y = "Measurement") +
theme_classic(base_size = 8) +
theme( legend.text = element_text(face = "bold", color = "black"),
axis.title = element_text(face = "bold", color = "black"),
axis.text = element_text(face = "bold", color = "black"),
axis.text.x = element_text(angle = 30, hjust = 1))
ggsave(file.path(saved.dir, "BoxPlot_scaled_v3.png"), width = 2., height = 1.5)
#Visualizing the heatmap
library(pheatmap)
ordered_index <- order(DataScore$seroScore, DataScore$Risk6, DataScore$group)
annotation_row_ordered <- DataScore[ordered_index, c("seroScore", "Risk6", "group")]
rownames(Combined.Dataset) <- rownames(DataScore)
mat_breaks <- quantile_breaks(na.omit(unlist(scale(Combined.Dataset[, 1:7]))), n = 100)
png(file.path(saved.dir, "selected.features_scaled_v3.png"), width=1000, height=1500, res = 300)
pheatmap(
mat = scale(Combined.Dataset[ordered_index, 1:7]),
color = colorRampPalette(rev(brewer.pal(n = 8, name = "RdBu")))(length(mat_breaks) - 1),
breaks = mat_breaks,
border_color = NA,
#color = colorRampPalette(rev(brewer.pal(n = 8, name = \RdYlBu\)))(6),
show_rownames = FALSE,
show_colnames = TRUE,
cluster_rows = FALSE,
cluster_cols = FALSE,
annotation_row = annotation_row_ordered,
annotation_colors = meta_colors,
fontsize = 5,
fontsize_col = 6,
scale = "none"
)
dev.off()
library(ggplot2)
library(reshape2)
Interested.Features <- scale(Combined.Dataset[, 1:7])
Interested.Features.df <- melt(Interested.Features)
colnames(Interested.Features.df) <- c("SampleID", "Features", "Value")
Features <- c("IgA1_PPD", "IgG2_PPD", "IgG2_ESAT6", "IgA2_PPD", "IgM_PPD", "IgG1_LAM", "FcgR3B_PPD")
Interested.Features.df$Features <- factor(Interested.Features.df$Features, levels = Features)
ggplot(Interested.Features.df, aes(x=Features, y=Value, fill = Features)) +
geom_boxplot(outlier.shape = NA, fill="gray") +
scale_fill_brewer(palette="Blues") +
labs(x = "Features",y = "Measurement") +
theme_classic(base_size = 8) +
theme( legend.text = element_text(face = "bold", color = "black"),
axis.title = element_text(face = "bold", color = "black"),
axis.text = element_text(face = "bold", color = "black"),
axis.text.x = element_text(angle = 30, hjust = 1))
ggsave(file.path(saved.dir, "BoxPlot_scaled_v4.png"), width = 2., height = 4.5)
