write.csv(Data_group, file.path(output_dir, "Data_group.csv"))
write.csv(Data_combining, file.path(output_dir, "Data_combining.csv"))
write.csv(Data_metainfo, file.path(output_dir, "Data_metainfo.csv"))
library(pheatmap)
annotation_row <- data.frame(group1 = Data_group, group = Data_group)
rownames(annotation_row) <- rownames(Data_combining)
ordered_index <- order(annotation_row$group, annotation_row$group1)
annotation_row_ordered <- annotation_row[ordered_index, ]
data.sero.ordered <- scale(Data_combining[ordered_index, ], center = TRUE, scale = TRUE)
mat_breaks <- quantile_breaks(na.omit(unlist(data.sero.ordered)), n = 100)
png(file.path(output_dir, "heatmap.scaled.png"), width=3560, height=1940, res = 300)
pheatmap(
mat = data.sero.ordered,
border_color = NA,
color = colorRampPalette(rev(brewer.pal(n = 8, name = "RdYlBu")))(length(mat_breaks) - 1),
#color = inferno(length(mat_breaks) - 1),
breaks = mat_breaks,
show_rownames = FALSE,
show_colnames = TRUE,
cluster_rows = FALSE,
cluster_cols = TRUE,
annotation_row = annotation_row_ordered,
annotation_colors = meta_colors,
fontsize = 6,
fontsize_col = 5,
fontsize_row = 5,
scale = "none",
main  = "Serology Data with Quantile Color Scale"
)
dev.off()
library(ggplot)
library(ggplot2)
ggplot(Data_metainfo, aes(x=Age, fill=Data_group)) +
geom_histogram( color="#e9ecef", alpha=0.6, position = 'identity') +
scale_fill_manual(values=meta_colors$group) +
theme_ipsum() +
labs(fill="")
library(ggplot2)
ggplot(Data_metainfo, aes(x=Age, fill=Data_group)) +
geom_histogram( color="#e9ecef", alpha=0.6, position = 'identity') +
scale_fill_manual(values=meta_colors$group) +
theme_classic() +
labs(fill="")
library(ggplot2)
ggplot(Data_metainfo, aes(x=Age, fill=Data_group)) +
geom_histogram( color="#e9ecef", alpha=0.6, position = 'identity', binwidth = 5) +
scale_fill_manual(values=meta_colors$group) +
theme_classic() +
labs(fill="")
library(ggplot2)
ggplot(Data_metainfo, aes(x=Age, fill=Data_group)) +
geom_histogram( color="#e9ecef", alpha=0.6, position = 'identity', binwidth = 2) +
scale_fill_manual(values=meta_colors$group) +
theme_classic() +
labs(fill="")
library(ggplot2)
ggplot(Data_metainfo, aes(x=Age, fill=Data_group)) +
geom_histogram( color="#e9ecef", alpha=0.6, position = 'identity', binwidth = 2) +
scale_fill_manual(values=meta_colors$group) +
theme_classic() +
labs(fill="")
ggplot(Data_metainfo, aes(x=Age, y = Data_group, fill=Data_group)) +
geom_density_ridges() +
theme_ridges() +
theme(legend.position = "none")
library(ggplot2)
library(ggridges)
ggplot(Data_metainfo, aes(x=Age, fill=Data_group)) +
geom_histogram( color="#e9ecef", alpha=0.6, position = 'identity', binwidth = 2) +
scale_fill_manual(values=meta_colors$group) +
theme_classic() +
labs(fill="")
ggplot(Data_metainfo, aes(x=Age, y = Data_group, fill=Data_group)) +
geom_density_ridges() +
theme_ridges() +
theme(legend.position = "none")
library(ggplot2)
library(ggridges)
ggplot(Data_metainfo, aes(x=Age, fill=Data_group)) +
geom_histogram( color="#e9ecef", alpha=0.6, position = 'identity', binwidth = 2) +
scale_fill_manual(values=meta_colors$group) +
theme_classic() +
labs(fill="")
ggplot(Data_metainfo, aes(x=Age, y = Data_group, fill=Data_group)) +
geom_density_ridges() +
scale_fill_manual(values=meta_colors$group) +
theme_ridges() +
theme(legend.position = "none")
meta_colors <- list(
"group" = c(
"progressor" = "#fe9300",
"non-progressor" = "#009093"
),
"group1" = c(
"progressor" = "#fe9300",
"non-progressor" = "#009093"
)
)
library(ggplot2)
library(ggridges)
ggplot(Data_metainfo, aes(x=Age, fill=Data_group)) +
geom_histogram( color="#e9ecef", alpha=0.6, position = 'identity', binwidth = 2) +
scale_fill_manual(values=meta_colors$group) +
theme_classic() +
labs(fill="")
ggplot(Data_metainfo, aes(x=Age, y = Data_group, fill=Data_group)) +
geom_density_ridges() +
scale_fill_manual(values=meta_colors$group) +
theme_ridges() +
theme(legend.position = "none")
library(ggplot2)
library(ggridges)
ggplot(Data_metainfo, aes(x=Age, fill=Data_group)) +
geom_histogram( color="#e9ecef", alpha=0.6, position = 'identity', binwidth = 2) +
scale_fill_manual(values=meta_colors$group) +
theme_classic() +
labs(fill="")
ggplot(Data_metainfo, aes(x=Age, y = Data_group, fill=Data_group)) +
geom_density_ridges() +
scale_fill_manual(values=meta_colors$group) +
theme_ridges() #+
#theme(legend.position = "none")
library(ggplot2)
library(ggridges)
ggplot(Data_metainfo, aes(x=Age, fill=Data_group)) +
geom_histogram( color="#e9ecef", alpha=0.6, position = 'identity', binwidth = 2) +
scale_fill_manual(values=meta_colors$group) +
theme_classic() +
labs(fill="")
ggplot(Data_metainfo, aes(x=Age, y = Data_group, fill=Data_group)) +
geom_density_ridges() +
scale_fill_manual(values=meta_colors$group) +
theme_ridges() +
theme(legend.position = "none")
library(ggplot2)
library(ggridges)
ggplot(Data_metainfo, aes(x=Age, fill=Data_group)) +
geom_histogram( color="#e9ecef", alpha=0.6, position = 'identity', binwidth = 2) +
scale_fill_manual(values=meta_colors$group) +
geom_vline(xintercept = 30, linetype="dotted", color = "blue", size=1.5)
theme_classic() +
labs(fill="")
ggplot(Data_metainfo, aes(x=Age, y = Data_group, fill=Data_group)) +
geom_density_ridges() +
scale_fill_manual(values=meta_colors$group) +
theme_ridges() +
theme(legend.position = "none")
library(ggplot2)
library(ggridges)
ggplot(Data_metainfo, aes(x=Age, fill=Data_group)) +
geom_histogram( color="#e9ecef", alpha=0.6, position = 'identity', binwidth = 2) +
scale_fill_manual(values=meta_colors$group) +
geom_vline(xintercept = 30, linetype="dotted", color = "blue", size=1.5)
theme_classic() +
labs(fill="")
ggplot(Data_metainfo, aes(x=Age, y = Data_group, fill=Data_group)) +
geom_density_ridges() +
scale_fill_manual(values=meta_colors$group) +
theme_ridges() +
theme(legend.position = "none")
library(ggplot2)
library(ggridges)
ggplot(Data_metainfo, aes(x=Age, fill=Data_group)) +
geom_histogram( color="#e9ecef", alpha=0.6, position = 'identity', binwidth = 2) +
scale_fill_manual(values=meta_colors$group) +
geom_vline(xintercept = 30, linetype="dotted", color = "blue", size=1.5) +
theme_classic() +
labs(fill="")
ggplot(Data_metainfo, aes(x=Age, y = Data_group, fill=Data_group)) +
geom_density_ridges() +
scale_fill_manual(values=meta_colors$group) +
theme_ridges() +
theme(legend.position = "none")
library(ggplot2)
library(ggridges)
ggplot(Data_metainfo, aes(x=Age, fill=Data_group)) +
geom_histogram( color="#e9ecef", alpha=0.6, position = 'identity', binwidth = 2) +
scale_fill_manual(values=meta_colors$group) +
geom_vline(xintercept = 32, linetype="dotted", color = "blue", size=1.5) +
theme_classic() +
labs(fill="")
ggplot(Data_metainfo, aes(x=Age, y = Data_group, fill=Data_group)) +
geom_density_ridges() +
scale_fill_manual(values=meta_colors$group) +
theme_ridges() +
theme(legend.position = "none")
library(ggplot2)
library(ggridges)
ggplot(Data_metainfo, aes(x=Age, fill=Data_group)) +
geom_histogram( color="#e9ecef", alpha=0.6, position = 'identity', binwidth = 2) +
scale_fill_manual(values=meta_colors$group) +
geom_vline(xintercept = 34, linetype="dotted", color = "blue", size=1.5) +
theme_classic() +
labs(fill="")
ggplot(Data_metainfo, aes(x=Age, y = Data_group, fill=Data_group)) +
geom_density_ridges() +
scale_fill_manual(values=meta_colors$group) +
theme_ridges() +
theme(legend.position = "none")
library(ggplot2)
library(ggridges)
ggplot(Data_metainfo, aes(x=Age, fill=Data_group)) +
geom_histogram( color="#e9ecef", alpha=0.6, position = 'identity', binwidth = 2) +
scale_fill_manual(values=meta_colors$group) +
geom_vline(xintercept = 34, linetype="dotted", color = "blue", size=1.5) +
theme_classic() +
labs(fill="")
ggplot(Data_metainfo, aes(x=Age, y = Data_group, fill=Data_group)) +
geom_density_ridges() +
scale_fill_manual(values=meta_colors$group) +
geom_vline(xintercept = 34, linetype="dotted", color = "blue", size=1.5) +
theme_ridges() +
theme(legend.position = "none")
library(ggplot2)
library(ggridges)
ggplot(Data_metainfo, aes(x=Age, fill=Data_group)) +
geom_histogram( color="#e9ecef", alpha=0.6, position = 'identity', binwidth = 2) +
scale_fill_manual(values=meta_colors$group) +
geom_vline(xintercept = 34, linetype="dotted", color = "black", size=1.5) +
theme_classic() +
labs(fill="")
ggplot(Data_metainfo, aes(x=Age, y = Data_group, fill=Data_group)) +
geom_density_ridges() +
scale_fill_manual(values=meta_colors$group) +
geom_vline(xintercept = 34, linetype="dotted", color = "black", size=1.5) +
theme_ridges() +
theme(legend.position = "none")
table(Data_metainfo[, c("sex", "Data_group")])
confusion_matrix <- table(Data_metainfo[, c("sex", "Data_group")])
confusion_matrix <- as.data.frame(confusion_matrix)
View(confusion_matrix)
confusion_matrix <- table(Data_metainfo[, c("sex", "Data_group")])
confusion_matrix <- as.data.frame(confusion_matrix)
ggplot(data = confusion_matrix,
mapping = aes(x = sex,
y = Data_group)) +
geom_tile(aes(fill = Freq)) +
geom_text(size = 3, aes(label = sprintf("%2.0f", Freq)), vjust = 1) +
scale_fill_gradient(low = "white",
high = "gray",
trans = "log") + # if your results aren't quite as clear as the above example
theme_classic(base_size = 8) +
theme(legend.position = "none")
confusion_matrix <- table(Data_metainfo[, c("sex", "Data_group")])
confusion_matrix <- as.data.frame(confusion_matrix)
ggplot(data = confusion_matrix,
mapping = aes(x = sex,
y = Data_group)) +
geom_tile(aes(fill = Freq)) +
geom_text(size = 3, aes(label = sprintf("%2.0f", Freq)), vjust = 1) +
scale_fill_gradient(low = "white",
high = "gray",
trans = "log") + # if your results aren't quite as clear as the above example
theme_classic(base_size = 8) +
theme(legend.position = "none")
ggsave(file.path(output_dir,  'Gender_Group.png'), width = 2.5, height = 2.5, res = "in", dpi = 500)
confusion_matrix <- table(Data_metainfo[, c("sex", "Data_group")])
confusion_matrix <- as.data.frame(confusion_matrix)
ggplot(data = confusion_matrix,
mapping = aes(x = sex,
y = Data_group)) +
geom_tile(aes(fill = Freq)) +
geom_text(size = 3, aes(label = sprintf("%2.0f", Freq)), vjust = 1) +
scale_fill_gradient(low = "white",
high = "gray",
trans = "log") + # if your results aren't quite as clear as the above example
theme_classic(base_size = 8) +
theme(legend.position = "none")
ggsave(file.path(output_dir,  'Gender_Group.png'), width = 2.5, height = 2.5, units = "in", dpi = 500)
Age_cat <- Data_metainfo$Age > 34
Age_cat <- as.numeric(Data_metainfo$Age > 34)
meta_colors <- list(
"group" = c(
"progressor" = "#fe9300",
"non-progressor" = "#009093"
),
"group1" = c(
"progressor" = "#fe9300",
"non-progressor" = "#009093"
)
)
set.seed(1986)
library(RColorBrewer)
library(viridis)
quantile_breaks <- function(xs, n = 10) {
breaks <- quantile(xs, probs = seq(0, 1, length.out = n))
breaks[!duplicated(breaks)]
}
folder <- "../2021-10-25-Extract_Dataset_Allmonths"
Progressor <- readRDS(file.path(paste0(folder, "/Progressor_Allmonths"), "logscale.TB.Progressor.RDS"))
Progressor.metadata <- readRDS(file.path(paste0(folder, "/Progressor_Allmonths"), "meta.data.Progressor.RDS"))
NonProgressor <- readRDS(file.path(paste0(folder, "/nonprogressors"), "nonprogressor.Data.RDS"))
nonProgressor.metadata <- readRDS(file.path(paste0(folder, "/nonprogressors"), "nonprogressor.meta.RDS"))
#NonProgressor.Avg <- readRDS(file.path(paste0(folder, "/nonprogressors"), "nonprogressor.Avg.RDS"))
nonProgressor.metadata.Avg <- readRDS(file.path(paste0(folder, "/nonprogressors"), "nonprogressor.meta.Avg.RDS"))
Syssero.Name <- colnames(NonProgressor)
all(colnames(Progressor) == colnames(NonProgressor))
## Provide the dir name(i.e sub dir) that you want to create under main dir:
output_dir <- 'Progressor_Allmonths_Test'
if (!dir.exists(output_dir)){
dir.create(output_dir)
}
NonProgressor.selected.index <- c()
for(index in 1 : dim(nonProgressor.metadata.Avg)[1]){
temp.ID <- as.character(nonProgressor.metadata.Avg[index, ]$ID)
rows.index <- which(as.character(nonProgressor.metadata$ID) == temp.ID)
selected.idx <- sample(rows.index,1)
NonProgressor.selected.index <- c(NonProgressor.selected.index, selected.idx)
}
NonProgressor.selected <- NonProgressor[NonProgressor.selected.index, ]
#
all(colnames(NonProgressor.selected) == colnames(Progressor))
Data_combining <- rbind(Progressor, NonProgressor.selected)
Data_metainfo <- rbind(Progressor.metadata, nonProgressor.metadata.Avg)
Data_group <- c(rep("progressor", dim(Progressor)[1]), rep("non-progressor", dim(NonProgressor.selected)[1]))
Data_metainfo$Data_group <- factor(Data_group, levels = c("non-progressor", "progressor"))
Age_cat <- as.numeric(Data_metainfo$Age > 34)
Sex_cat <- Data_metainfo$sex
write.csv(Age_cat, file.path(output_dir, "Age_cat.csv"))
write.csv(Sex_cat, file.path(output_dir, "Sex_cat.csv"))
# temp.index <- which(apply(Data_combining, 1, function(x) any(is.na(x))))
# Data_group <- Data_group[-temp.index]
# Data_combining <- Data_combining[-temp.index, ]
saveRDS(Data_group, file.path(output_dir, "Data_group.RDS"))
saveRDS(Data_combining, file.path(output_dir, "Data_combining.RDS"))
saveRDS(Data_metainfo, file.path(output_dir, "Data_metainfo.RDS"))
write.csv(Data_group, file.path(output_dir, "Data_group.csv"))
write.csv(Data_combining, file.path(output_dir, "Data_combining.csv"))
write.csv(Data_metainfo, file.path(output_dir, "Data_metainfo.csv"))
library(pheatmap)
annotation_row <- data.frame(group1 = Data_group, group = Data_group)
rownames(annotation_row) <- rownames(Data_combining)
ordered_index <- order(annotation_row$group, annotation_row$group1)
annotation_row_ordered <- annotation_row[ordered_index, ]
data.sero.ordered <- scale(Data_combining[ordered_index, ], center = TRUE, scale = TRUE)
mat_breaks <- quantile_breaks(na.omit(unlist(data.sero.ordered)), n = 100)
png(file.path(output_dir, "heatmap.scaled.png"), width=3560, height=1940, res = 300)
pheatmap(
mat = data.sero.ordered,
border_color = NA,
color = colorRampPalette(rev(brewer.pal(n = 8, name = "RdYlBu")))(length(mat_breaks) - 1),
#color = inferno(length(mat_breaks) - 1),
breaks = mat_breaks,
show_rownames = FALSE,
show_colnames = TRUE,
cluster_rows = FALSE,
cluster_cols = TRUE,
annotation_row = annotation_row_ordered,
annotation_colors = meta_colors,
fontsize = 6,
fontsize_col = 5,
fontsize_row = 5,
scale = "none",
main  = "Serology Data with Quantile Color Scale"
)
dev.off()
library(ggplot2)
library(ggridges)
ggplot(Data_metainfo, aes(x=Age, fill=Data_group)) +
geom_histogram( color="#e9ecef", alpha=0.6, position = 'identity', binwidth = 2) +
scale_fill_manual(values=meta_colors$group) +
geom_vline(xintercept = 34, linetype="dotted", color = "black", size=1.5) +
theme_classic() +
labs(fill="")
ggplot(Data_metainfo, aes(x=Age, y = Data_group, fill=Data_group)) +
geom_density_ridges() +
scale_fill_manual(values=meta_colors$group) +
geom_vline(xintercept = 34, linetype="dotted", color = "black", size=1.5) +
theme_ridges() +
theme(legend.position = "none")
confusion_matrix <- table(Data_metainfo[, c("sex", "Data_group")])
confusion_matrix <- as.data.frame(confusion_matrix)
ggplot(data = confusion_matrix,
mapping = aes(x = sex,
y = Data_group)) +
geom_tile(aes(fill = Freq)) +
geom_text(size = 3, aes(label = sprintf("%2.0f", Freq)), vjust = 1) +
scale_fill_gradient(low = "white",
high = "gray",
trans = "log") + # if your results aren't quite as clear as the above example
theme_classic(base_size = 8) +
theme(legend.position = "none")
ggsave(file.path(output_dir,  'Gender_Group.png'), width = 2.5, height = 2.5, units = "in", dpi = 500)
meta_colors <- list(
"group" = c(
"progressor" = "#fe9300",
"non-progressor" = "#009093"
),
"group1" = c(
"progressor" = "#fe9300",
"non-progressor" = "#009093"
)
)
set.seed(1986)
library(RColorBrewer)
library(viridis)
quantile_breaks <- function(xs, n = 10) {
breaks <- quantile(xs, probs = seq(0, 1, length.out = n))
breaks[!duplicated(breaks)]
}
folder <- "../2021-10-25-Extract_Dataset_Allmonths"
Progressor <- readRDS(file.path(paste0(folder, "/Progressor_Allmonths"), "logscale.TB.Progressor.RDS"))
Progressor.metadata <- readRDS(file.path(paste0(folder, "/Progressor_Allmonths"), "meta.data.Progressor.RDS"))
NonProgressor <- readRDS(file.path(paste0(folder, "/nonprogressors"), "nonprogressor.Data.RDS"))
nonProgressor.metadata <- readRDS(file.path(paste0(folder, "/nonprogressors"), "nonprogressor.meta.RDS"))
#NonProgressor.Avg <- readRDS(file.path(paste0(folder, "/nonprogressors"), "nonprogressor.Avg.RDS"))
nonProgressor.metadata.Avg <- readRDS(file.path(paste0(folder, "/nonprogressors"), "nonprogressor.meta.Avg.RDS"))
Syssero.Name <- colnames(NonProgressor)
all(colnames(Progressor) == colnames(NonProgressor))
## Provide the dir name(i.e sub dir) that you want to create under main dir:
output_dir <- 'Progressor_Allmonths_Test'
if (!dir.exists(output_dir)){
dir.create(output_dir)
}
NonProgressor.selected.index <- c()
for(index in 1 : dim(nonProgressor.metadata.Avg)[1]){
temp.ID <- as.character(nonProgressor.metadata.Avg[index, ]$ID)
rows.index <- which(as.character(nonProgressor.metadata$ID) == temp.ID)
selected.idx <- sample(rows.index,1)
NonProgressor.selected.index <- c(NonProgressor.selected.index, selected.idx)
}
NonProgressor.selected <- NonProgressor[NonProgressor.selected.index, ]
#
all(colnames(NonProgressor.selected) == colnames(Progressor))
Data_combining <- rbind(Progressor, NonProgressor.selected)
Data_metainfo <- rbind(Progressor.metadata, nonProgressor.metadata.Avg)
Data_group <- c(rep("progressor", dim(Progressor)[1]), rep("non-progressor", dim(NonProgressor.selected)[1]))
Data_metainfo$Data_group <- factor(Data_group, levels = c("non-progressor", "progressor"))
Age_cat <- as.numeric(Data_metainfo$Age > 34)
Sex_cat <- Data_metainfo$sex
write.csv(Age_cat, file.path(output_dir, "Age_cat.csv"))
write.csv(Sex_cat, file.path(output_dir, "Sex_cat.csv"))
Age_cat <- as.numeric(Data_metainfo$Age > 20)
write.csv(Age_cat, file.path(output_dir, "Age_cat_threshold_20.csv"))
unique(Data_metainfo$Age)
order(unique(Data_metainfo$Age))
sort(unique(Data_metainfo$Age))
meta_colors <- list(
"group" = c(
"progressor" = "#fe9300",
"non-progressor" = "#009093"
),
"group1" = c(
"progressor" = "#fe9300",
"non-progressor" = "#009093"
)
)
set.seed(1986)
library(RColorBrewer)
library(viridis)
quantile_breaks <- function(xs, n = 10) {
breaks <- quantile(xs, probs = seq(0, 1, length.out = n))
breaks[!duplicated(breaks)]
}
folder <- "../2021-10-25-Extract_Dataset_Allmonths"
Progressor <- readRDS(file.path(paste0(folder, "/Progressor_Allmonths"), "logscale.TB.Progressor.RDS"))
Progressor.metadata <- readRDS(file.path(paste0(folder, "/Progressor_Allmonths"), "meta.data.Progressor.RDS"))
NonProgressor <- readRDS(file.path(paste0(folder, "/nonprogressors"), "nonprogressor.Data.RDS"))
nonProgressor.metadata <- readRDS(file.path(paste0(folder, "/nonprogressors"), "nonprogressor.meta.RDS"))
#NonProgressor.Avg <- readRDS(file.path(paste0(folder, "/nonprogressors"), "nonprogressor.Avg.RDS"))
nonProgressor.metadata.Avg <- readRDS(file.path(paste0(folder, "/nonprogressors"), "nonprogressor.meta.Avg.RDS"))
Syssero.Name <- colnames(NonProgressor)
all(colnames(Progressor) == colnames(NonProgressor))
## Provide the dir name(i.e sub dir) that you want to create under main dir:
output_dir <- 'Progressor_Allmonths_Test'
if (!dir.exists(output_dir)){
dir.create(output_dir)
}
NonProgressor.selected.index <- c()
for(index in 1 : dim(nonProgressor.metadata.Avg)[1]){
temp.ID <- as.character(nonProgressor.metadata.Avg[index, ]$ID)
rows.index <- which(as.character(nonProgressor.metadata$ID) == temp.ID)
selected.idx <- sample(rows.index,1)
NonProgressor.selected.index <- c(NonProgressor.selected.index, selected.idx)
}
NonProgressor.selected <- NonProgressor[NonProgressor.selected.index, ]
#
all(colnames(NonProgressor.selected) == colnames(Progressor))
Data_combining <- rbind(Progressor, NonProgressor.selected)
Data_metainfo <- rbind(Progressor.metadata, nonProgressor.metadata.Avg)
Data_group <- c(rep("progressor", dim(Progressor)[1]), rep("non-progressor", dim(NonProgressor.selected)[1]))
Data_metainfo$Data_group <- factor(Data_group, levels = c("non-progressor", "progressor"))
Age_cat <- as.numeric(Data_metainfo$Age > 34)
Sex_cat <- Data_metainfo$sex
write.csv(Age_cat, file.path(output_dir, "Age_cat.csv"))
write.csv(Sex_cat, file.path(output_dir, "Sex_cat.csv"))
Age_cat <- as.numeric(Data_metainfo$Age > 20)
write.csv(Age_cat, file.path(output_dir, "Age_cat_threshold_20.csv"))
Age_cat <- as.numeric(Data_metainfo$Age <= 20 & Data_metainfo$Age > 5)
write.csv(Age_cat, file.path(output_dir, "Age_cat_threshold_Adolescent.csv"))
Age_cat
Data_metainfo$Age
library(ggplot2)
library(ggridges)
ggplot(Data_metainfo, aes(x=Age, fill=Data_group)) +
geom_histogram( color="#e9ecef", alpha=0.6, position = 'identity', binwidth = 2) +
scale_fill_manual(values=meta_colors$group) +
geom_vline(xintercept = 34, linetype="dotted", color = "black", size=1.5) +
theme_classic() +
labs(fill="")
ggplot(Data_metainfo, aes(x=Age, fill=sex)) +
geom_histogram( color="#e9ecef", alpha=0.6, position = 'identity', binwidth = 2) +
#scale_fill_manual(values=meta_colors$group) +
geom_vline(xintercept = 34, linetype="dotted", color = "black", size=1.5) +
theme_classic() +
labs(fill="")
ggplot(Data_metainfo, aes(x=Age, fill=sex)) +
geom_histogram( color="#e9ecef", alpha=0.6, position = 'identity', binwidth = 2) +
#scale_fill_manual(values=meta_colors$group) +
geom_vline(xintercept = 20, linetype="dotted", color = "black", size=1.5) +
theme_classic() +
labs(fill="")
